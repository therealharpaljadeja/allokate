{"abi":[{"type":"function","name":"addPoolManager","inputs":[{"name":"_poolId","type":"uint256","internalType":"uint256"},{"name":"_manager","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"addToCloneableStrategies","inputs":[{"name":"_strategy","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"allocate","inputs":[{"name":"_poolId","type":"uint256","internalType":"uint256"},{"name":"_data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"batchAllocate","inputs":[{"name":"_poolIds","type":"uint256[]","internalType":"uint256[]"},{"name":"_datas","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"batchRegisterRecipient","inputs":[{"name":"_poolIds","type":"uint256[]","internalType":"uint256[]"},{"name":"_data","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"createPool","inputs":[{"name":"_profileId","type":"bytes32","internalType":"bytes32"},{"name":"_strategy","type":"address","internalType":"address"},{"name":"_initStrategyData","type":"bytes","internalType":"bytes"},{"name":"_token","type":"address","internalType":"address"},{"name":"_amount","type":"uint256","internalType":"uint256"},{"name":"_metadata","type":"tuple","internalType":"struct Metadata","components":[{"name":"protocol","type":"uint256","internalType":"uint256"},{"name":"pointer","type":"string","internalType":"string"}]},{"name":"_managers","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"poolId","type":"uint256","internalType":"uint256"}],"stateMutability":"payable"},{"type":"function","name":"createPoolWithCustomStrategy","inputs":[{"name":"_profileId","type":"bytes32","internalType":"bytes32"},{"name":"_strategy","type":"address","internalType":"address"},{"name":"_initStrategyData","type":"bytes","internalType":"bytes"},{"name":"_token","type":"address","internalType":"address"},{"name":"_amount","type":"uint256","internalType":"uint256"},{"name":"_metadata","type":"tuple","internalType":"struct Metadata","components":[{"name":"protocol","type":"uint256","internalType":"uint256"},{"name":"pointer","type":"string","internalType":"string"}]},{"name":"_managers","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"poolId","type":"uint256","internalType":"uint256"}],"stateMutability":"payable"},{"type":"function","name":"distribute","inputs":[{"name":"_poolId","type":"uint256","internalType":"uint256"},{"name":"_recipientIds","type":"address[]","internalType":"address[]"},{"name":"_data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"fundPool","inputs":[{"name":"_poolId","type":"uint256","internalType":"uint256"},{"name":"_amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"getBaseFee","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getFeeDenominator","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getPercentFee","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getPool","inputs":[{"name":"_poolId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IAllo.Pool","components":[{"name":"profileId","type":"bytes32","internalType":"bytes32"},{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"token","type":"address","internalType":"address"},{"name":"metadata","type":"tuple","internalType":"struct Metadata","components":[{"name":"protocol","type":"uint256","internalType":"uint256"},{"name":"pointer","type":"string","internalType":"string"}]},{"name":"managerRole","type":"bytes32","internalType":"bytes32"},{"name":"adminRole","type":"bytes32","internalType":"bytes32"}]}],"stateMutability":"view"},{"type":"function","name":"getRegistry","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IRegistry"}],"stateMutability":"view"},{"type":"function","name":"getStrategy","inputs":[{"name":"_poolId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getTreasury","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address payable"}],"stateMutability":"view"},{"type":"function","name":"initialize","inputs":[{"name":"_owner","type":"address","internalType":"address"},{"name":"_registry","type":"address","internalType":"address"},{"name":"_treasury","type":"address","internalType":"address payable"},{"name":"_percentFee","type":"uint256","internalType":"uint256"},{"name":"_baseFee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"isCloneableStrategy","inputs":[{"name":"_strategy","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isPoolAdmin","inputs":[{"name":"_poolId","type":"uint256","internalType":"uint256"},{"name":"_address","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isPoolManager","inputs":[{"name":"_poolId","type":"uint256","internalType":"uint256"},{"name":"_address","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"recoverFunds","inputs":[{"name":"_token","type":"address","internalType":"address"},{"name":"_recipient","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"registerRecipient","inputs":[{"name":"_poolId","type":"uint256","internalType":"uint256"},{"name":"_data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"payable"},{"type":"function","name":"removeFromCloneableStrategies","inputs":[{"name":"_strategy","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removePoolManager","inputs":[{"name":"_poolId","type":"uint256","internalType":"uint256"},{"name":"_manager","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateBaseFee","inputs":[{"name":"_baseFee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updatePercentFee","inputs":[{"name":"_percentFee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updatePoolMetadata","inputs":[{"name":"_poolId","type":"uint256","internalType":"uint256"},{"name":"_metadata","type":"tuple","internalType":"struct Metadata","components":[{"name":"protocol","type":"uint256","internalType":"uint256"},{"name":"pointer","type":"string","internalType":"string"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateRegistry","inputs":[{"name":"_registry","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateTreasury","inputs":[{"name":"_treasury","type":"address","internalType":"address payable"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"BaseFeePaid","inputs":[{"name":"poolId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"BaseFeeUpdated","inputs":[{"name":"baseFee","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"PercentFeeUpdated","inputs":[{"name":"percentFee","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"PoolCreated","inputs":[{"name":"poolId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"profileId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"strategy","type":"address","indexed":false,"internalType":"contract IStrategy"},{"name":"token","type":"address","indexed":false,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"metadata","type":"tuple","indexed":false,"internalType":"struct Metadata","components":[{"name":"protocol","type":"uint256","internalType":"uint256"},{"name":"pointer","type":"string","internalType":"string"}]}],"anonymous":false},{"type":"event","name":"PoolFunded","inputs":[{"name":"poolId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"fee","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"PoolMetadataUpdated","inputs":[{"name":"poolId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"metadata","type":"tuple","indexed":false,"internalType":"struct Metadata","components":[{"name":"protocol","type":"uint256","internalType":"uint256"},{"name":"pointer","type":"string","internalType":"string"}]}],"anonymous":false},{"type":"event","name":"RegistryUpdated","inputs":[{"name":"registry","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"StrategyApproved","inputs":[{"name":"strategy","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"StrategyRemoved","inputs":[{"name":"strategy","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"TreasuryUpdated","inputs":[{"name":"treasury","type":"address","indexed":false,"internalType":"address"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"addPoolManager(uint256,address)":"2cf682b0","addToCloneableStrategies(address)":"41bba0b4","allocate(uint256,bytes)":"2ec38188","batchAllocate(uint256[],bytes[])":"c6dff1cf","batchRegisterRecipient(uint256[],bytes[])":"1a20bd88","createPool(bytes32,address,bytes,address,uint256,(uint256,string),address[])":"77da8caf","createPoolWithCustomStrategy(bytes32,address,bytes,address,uint256,(uint256,string),address[])":"e1007d4a","distribute(uint256,address[],bytes)":"3a5fbd92","fundPool(uint256,uint256)":"5acd6fac","getBaseFee()":"15e812ad","getFeeDenominator()":"f4e1fc41","getPercentFee()":"4edbaadc","getPool(uint256)":"068bcd8d","getRegistry()":"5ab1bd53","getStrategy(uint256)":"cfc0cc34","getTreasury()":"3b19e84a","initialize(address,address,address,uint256,uint256)":"a6b63eb8","isCloneableStrategy(address)":"ab2ec589","isPoolAdmin(uint256,address)":"ab3febc6","isPoolManager(uint256,address)":"29e40d4b","recoverFunds(address,address)":"24ae6a27","registerRecipient(uint256,bytes)":"075c0e9c","removeFromCloneableStrategies(address)":"031e2fa1","removePoolManager(uint256,address)":"7f5a70bd","updateBaseFee(uint256)":"8e690186","updatePercentFee(uint256)":"f54fc4a0","updatePoolMetadata(uint256,(uint256,string))":"5f9ca138","updateRegistry(address)":"1a5da6c8","updateTreasury(address)":"7f51bb1f"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BaseFeePaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseFee\",\"type\":\"uint256\"}],\"name\":\"BaseFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"percentFee\",\"type\":\"uint256\"}],\"name\":\"PercentFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"profileId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct Metadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"PoolFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct Metadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"name\":\"PoolMetadataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"registry\",\"type\":\"address\"}],\"name\":\"RegistryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"}],\"name\":\"TreasuryUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_manager\",\"type\":\"address\"}],\"name\":\"addPoolManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"}],\"name\":\"addToCloneableStrategies\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"allocate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_poolIds\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"_datas\",\"type\":\"bytes[]\"}],\"name\":\"batchAllocate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_poolIds\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"_data\",\"type\":\"bytes[]\"}],\"name\":\"batchRegisterRecipient\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_profileId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_initStrategyData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"internalType\":\"struct Metadata\",\"name\":\"_metadata\",\"type\":\"tuple\"},{\"internalType\":\"address[]\",\"name\":\"_managers\",\"type\":\"address[]\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_profileId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_initStrategyData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"internalType\":\"struct Metadata\",\"name\":\"_metadata\",\"type\":\"tuple\"},{\"internalType\":\"address[]\",\"name\":\"_managers\",\"type\":\"address[]\"}],\"name\":\"createPoolWithCustomStrategy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_recipientIds\",\"type\":\"address[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"fundPool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeDenominator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPercentFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"getPool\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"profileId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"internalType\":\"struct Metadata\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"managerRole\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"adminRole\",\"type\":\"bytes32\"}],\"internalType\":\"struct IAllo.Pool\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRegistry\",\"outputs\":[{\"internalType\":\"contract IRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"getStrategy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTreasury\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_registry\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_percentFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_baseFee\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"}],\"name\":\"isCloneableStrategy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isPoolAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isPoolManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"recoverFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"registerRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"}],\"name\":\"removeFromCloneableStrategies\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_manager\",\"type\":\"address\"}],\"name\":\"removePoolManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_baseFee\",\"type\":\"uint256\"}],\"name\":\"updateBaseFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_percentFee\",\"type\":\"uint256\"}],\"name\":\"updatePercentFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"internalType\":\"struct Metadata\",\"name\":\"_metadata\",\"type\":\"tuple\"}],\"name\":\"updatePoolMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_registry\",\"type\":\"address\"}],\"name\":\"updateRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"updateTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"@thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\",\"events\":{\"BaseFeePaid(uint256,uint256)\":{\"params\":{\"amount\":\"Amount of the base fee paid\",\"poolId\":\"ID of the pool the base fee was paid for\"}},\"BaseFeeUpdated(uint256)\":{\"params\":{\"baseFee\":\"New base fee amount\"}},\"PercentFeeUpdated(uint256)\":{\"params\":{\"percentFee\":\"New percentage for the fee\"}},\"PoolCreated(uint256,bytes32,address,address,uint256,(uint256,string))\":{\"params\":{\"amount\":\"Amount pool was funded with when created\",\"metadata\":\"Pool metadata\",\"poolId\":\"ID of the pool created\",\"profileId\":\"ID of the profile the pool is associated with\",\"strategy\":\"Address of the strategy contract\",\"token\":\"Address of the token pool was funded with when created\"}},\"PoolFunded(uint256,uint256,uint256)\":{\"params\":{\"amount\":\"Amount funded to the pool\",\"fee\":\"Amount of the fee paid to the treasury\",\"poolId\":\"ID of the pool funded\"}},\"PoolMetadataUpdated(uint256,(uint256,string))\":{\"params\":{\"metadata\":\"Pool metadata that was updated\",\"poolId\":\"ID of the pool updated\"}},\"RegistryUpdated(address)\":{\"params\":{\"registry\":\"Address of the new registry\"}},\"StrategyApproved(address)\":{\"params\":{\"strategy\":\"Address of the strategy approved\"}},\"StrategyRemoved(address)\":{\"params\":{\"strategy\":\"Address of the strategy removed\"}},\"TreasuryUpdated(address)\":{\"params\":{\"treasury\":\"Address of the new treasury\"}}},\"kind\":\"dev\",\"methods\":{\"addPoolManager(uint256,address)\":{\"details\":\"'msg.sender' must be a pool admin.\",\"params\":{\"_manager\":\"The address of the manager to add\",\"_poolId\":\"The ID of the pool to add the manager to\"}},\"addToCloneableStrategies(address)\":{\"details\":\"'msg.sender' must be the Allo contract owner.\",\"params\":{\"_strategy\":\"The address of the strategy to add\"}},\"allocate(uint256,bytes)\":{\"details\":\"Each strategy will handle the allocation of funds differently.\",\"params\":{\"_data\":\"The data to pass to the strategy and may be handled differently by each strategy.\",\"_poolId\":\"The ID of the pool to allocate funds from\"}},\"batchAllocate(uint256[],bytes[])\":{\"details\":\"Each strategy will handle the allocation of funds differently\"},\"batchRegisterRecipient(uint256[],bytes[])\":{\"params\":{\"_data\":\"The data to pass to the strategy and may be handled differently by each strategy\",\"_poolIds\":\"The pool ID's to register the recipients for\"}},\"createPool(bytes32,address,bytes,address,uint256,(uint256,string),address[])\":{\"custom:initstrategydata\":\"The encoded data will be specific to a given strategy requirements,    reference the strategy implementation of 'initialize()'\",\"details\":\"'msg.sender' must be owner or member of the profile id passed as '_profileId'.\",\"params\":{\"_amount\":\"The amount of the token\",\"_initStrategyData\":\"The data to initialize the strategy\",\"_managers\":\"The managers of the pool\",\"_metadata\":\"The metadata of the pool\",\"_profileId\":\"The ID of the registry profile, used to check if 'msg.sender' is a member or owner of the profile\",\"_strategy\":\"The address of the strategy contract the pool will use.\",\"_token\":\"The address of the token\"}},\"createPoolWithCustomStrategy(bytes32,address,bytes,address,uint256,(uint256,string),address[])\":{\"details\":\"'msg.sender' must be a member or owner of a profile to create a pool with or without a custom strategy, The encoded data      will be specific to a given strategy requirements, reference the strategy implementation of 'initialize()'. The strategy      address passed must not be a cloneable strategy. The strategy address passed must not be the zero address. 'msg.sender' must      be a member or owner of the profile id passed as '_profileId'.\",\"params\":{\"_amount\":\"The amount of the token you want to deposit into the pool on initialization\",\"_initStrategyData\":\"The data to initialize the strategy\",\"_managers\":\"The managers of the pool, and can be added/removed later by the pool admin\",\"_metadata\":\"The 'Metadata' of the pool, this uses our 'Meatdata.sol' struct (consistent throughout the protocol)\",\"_profileId\":\"The 'profileId' of the registry profile, used to check if 'msg.sender' is a member or owner of the profile\",\"_strategy\":\"The address of the deployed custom strategy\",\"_token\":\"The address of the token you want to use in your pool\"},\"returns\":{\"poolId\":\"The ID of the pool\"}},\"distribute(uint256,address[],bytes)\":{\"details\":\"Each strategy will handle the distribution of funds differently\",\"params\":{\"_data\":\"The data to pass to the strategy and may be handled differently by each strategy\",\"_poolId\":\"The ID of the pool to distribute from\",\"_recipientIds\":\"The recipient ids to distribute to\"}},\"fundPool(uint256,uint256)\":{\"details\":\"'msg.value' must be greater than 0 if the token is the native token       or '_amount' must be greater than 0 if the token is not the native token.\",\"params\":{\"_amount\":\"The amount to fund the pool with\",\"_poolId\":\"The ID of the pool to fund\"}},\"getBaseFee()\":{\"returns\":{\"_0\":\"baseFee The current base fee\"}},\"getFeeDenominator()\":{\"details\":\"1e18 represents 100%\",\"returns\":{\"_0\":\"feeDenominator The current fee denominator\"}},\"getPercentFee()\":{\"returns\":{\"_0\":\"percentFee The current percentage for the fee\"}},\"getPool(uint256)\":{\"params\":{\"_poolId\":\"The ID of the pool to check\"},\"returns\":{\"_0\":\"pool The 'Pool' struct for the ID of the pool passed in\"}},\"getRegistry()\":{\"returns\":{\"_0\":\"registry The current registry address\"}},\"getStrategy(uint256)\":{\"params\":{\"_poolId\":\"The ID of the pool to check\"},\"returns\":{\"_0\":\"strategy The address of the strategy for the ID of the pool passed in\"}},\"getTreasury()\":{\"returns\":{\"_0\":\"treasury The current treasury address\"}},\"initialize(address,address,address,uint256,uint256)\":{\"params\":{\"_baseFee\":\"Base fee amount\",\"_owner\":\"Address of the owner\",\"_percentFee\":\"Percentage for the fee\",\"_registry\":\"Address of the registry contract\",\"_treasury\":\"Address of the treasury\"}},\"isCloneableStrategy(address)\":{\"params\":{\"_strategy\":\"The address of the strategy to check\"},\"returns\":{\"_0\":\"'true' if the '_strategy' is cloneable, otherwise 'false'\"}},\"isPoolAdmin(uint256,address)\":{\"params\":{\"_address\":\"The address to check\",\"_poolId\":\"The ID of the pool to check\"},\"returns\":{\"_0\":\"'true' if the '_address' is a pool admin, otherwise 'false'\"}},\"isPoolManager(uint256,address)\":{\"params\":{\"_address\":\"The address to check\",\"_poolId\":\"The ID of the pool to check\"},\"returns\":{\"_0\":\"'true' if the '_address' is a pool manager, otherwise 'false'\"}},\"recoverFunds(address,address)\":{\"details\":\"'msg.sender' must be a pool admin.\",\"params\":{\"_recipient\":\"The address to send the recovered funds to\",\"_token\":\"The token to recover\"}},\"registerRecipient(uint256,bytes)\":{\"params\":{\"_poolId\":\"The ID of the pool to register the recipient for\"}},\"removeFromCloneableStrategies(address)\":{\"details\":\"'msg.sender' must be the Allo contract owner.\",\"params\":{\"_strategy\":\"The address of the strategy to remove\"}},\"removePoolManager(uint256,address)\":{\"details\":\"'msg.sender' must be a pool admin.\",\"params\":{\"_manager\":\"The address of the manager to remove\",\"_poolId\":\"The ID of the pool to remove the manager from\"}},\"updateBaseFee(uint256)\":{\"details\":\"'msg.sender' must be the Allo contract owner.\",\"params\":{\"_baseFee\":\"The new base fee\"}},\"updatePercentFee(uint256)\":{\"details\":\"'msg.sender' must be the Allo contract owner.\",\"params\":{\"_percentFee\":\"The new percentage for the fee\"}},\"updatePoolMetadata(uint256,(uint256,string))\":{\"details\":\"'msg.sender' must be a pool admin.\",\"params\":{\"_metadata\":\"The new metadata to set\",\"_poolId\":\"The ID of the pool to update\"}},\"updateRegistry(address)\":{\"details\":\"'msg.sender' must be the Allo contract owner.\",\"params\":{\"_registry\":\"The new registry address\"}},\"updateTreasury(address)\":{\"details\":\"'msg.sender' must be the Allo contract owner.\",\"params\":{\"_treasury\":\"The new treasury address\"}}},\"title\":\"Allo Interface\",\"version\":1},\"userdoc\":{\"events\":{\"BaseFeePaid(uint256,uint256)\":{\"notice\":\"Emitted when the base fee is paid\"},\"BaseFeeUpdated(uint256)\":{\"notice\":\"Emitted when the base fee is updated\"},\"PercentFeeUpdated(uint256)\":{\"notice\":\"Emitted when the percent fee is updated\"},\"PoolCreated(uint256,bytes32,address,address,uint256,(uint256,string))\":{\"notice\":\"Event emitted when a new pool is created\"},\"PoolFunded(uint256,uint256,uint256)\":{\"notice\":\"Emitted when a pool is funded\"},\"PoolMetadataUpdated(uint256,(uint256,string))\":{\"notice\":\"Emitted when a pools metadata is updated\"},\"RegistryUpdated(address)\":{\"notice\":\"Emitted when the registry address is updated\"},\"StrategyApproved(address)\":{\"notice\":\"Emitted when a strategy is approved and added to the cloneable strategies\"},\"StrategyRemoved(address)\":{\"notice\":\"Emitted when a strategy is removed from the cloneable strategies\"},\"TreasuryUpdated(address)\":{\"notice\":\"Emitted when the treasury address is updated\"}},\"kind\":\"user\",\"methods\":{\"addPoolManager(uint256,address)\":{\"notice\":\"Adds a pool manager to the pool.\"},\"addToCloneableStrategies(address)\":{\"notice\":\"Adds a strategy to the cloneable strategies.\"},\"allocate(uint256,bytes)\":{\"notice\":\"Allocates funds to a recipient.\"},\"batchAllocate(uint256[],bytes[])\":{\"notice\":\"Allocates funds to multiple recipients.\"},\"batchRegisterRecipient(uint256[],bytes[])\":{\"notice\":\"Registers a batch of recipients.\"},\"createPool(bytes32,address,bytes,address,uint256,(uint256,string),address[])\":{\"notice\":\"Creates a new pool (by cloning a cloneable strategies).\"},\"createPoolWithCustomStrategy(bytes32,address,bytes,address,uint256,(uint256,string),address[])\":{\"notice\":\"Creates a new pool (with a custom strategy)\"},\"distribute(uint256,address[],bytes)\":{\"notice\":\"Distributes funds to recipients and emits {Distributed} event if successful\"},\"fundPool(uint256,uint256)\":{\"notice\":\"Funds a pool.\"},\"getBaseFee()\":{\"notice\":\"Returns the current base fee\"},\"getFeeDenominator()\":{\"notice\":\"Returns the current fee denominator\"},\"getPercentFee()\":{\"notice\":\"Returns the current percent fee\"},\"getPool(uint256)\":{\"notice\":\"Returns the 'Pool' struct for a given 'poolId'\"},\"getRegistry()\":{\"notice\":\"Returns the current registry address\"},\"getStrategy(uint256)\":{\"notice\":\"Returns the address of the strategy for a given 'poolId'\"},\"getTreasury()\":{\"notice\":\"Returns the current treasury address\"},\"initialize(address,address,address,uint256,uint256)\":{\"notice\":\"Initialize the Allo contract\"},\"isCloneableStrategy(address)\":{\"notice\":\"Checks if a strategy is cloneable (is in the cloneableStrategies mapping).\"},\"isPoolAdmin(uint256,address)\":{\"notice\":\"Checks if an address is a pool admin.\"},\"isPoolManager(uint256,address)\":{\"notice\":\"Checks if an address is a pool manager.\"},\"recoverFunds(address,address)\":{\"notice\":\"Recovers funds from a pool.\"},\"registerRecipient(uint256,bytes)\":{\"notice\":\"Registers a recipient and emits {Registered} event if successful and may be handled differently by each strategy.\"},\"removeFromCloneableStrategies(address)\":{\"notice\":\"Removes a strategy from the cloneable strategies.\"},\"removePoolManager(uint256,address)\":{\"notice\":\"Removes a pool manager from the pool.\"},\"updateBaseFee(uint256)\":{\"notice\":\"Updates the base fee.\"},\"updatePercentFee(uint256)\":{\"notice\":\"Updates the percentage for the fee.\"},\"updatePoolMetadata(uint256,(uint256,string))\":{\"notice\":\"Updates a pools metadata.\"},\"updateRegistry(address)\":{\"notice\":\"Update the registry address.\"},\"updateTreasury(address)\":{\"notice\":\"Updates the treasury address.\"}},\"notice\":\"Interface for the Allo contract. It exposes all functions needed to use the Allo protocol.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/core/interfaces/IAllo.sol\":\"IAllo\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solady/=lib/solady/src/\"]},\"sources\":{\"src/core/interfaces/IAllo.sol\":{\"keccak256\":\"0xd3ea236154c6a35dfa5699f226283b92f20be90151c89726b64c3e301994dd80\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://6b858848260585dbccbbb08c9dfc5e744cb92ed4c73a9a6e9fb7bf66c975fbea\",\"dweb:/ipfs/QmQCn1AQyyfEEHk616Mhye7zswyvtgqChYCPzKt9gKF6pj\"]},\"src/core/interfaces/IRegistry.sol\":{\"keccak256\":\"0x84702fb3f5f7f6a6a93165f60d96e4ca879050aeb3004e389d52dac0cc6c2f79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://635148af139b9bd5a18843c76d5aef3892038330e4cf8d23a327bea94f4d9715\",\"dweb:/ipfs/QmcxNUKJPYTCLKxMPduRFMdwhHE1hhghWK72HF8krEsADv\"]},\"src/core/interfaces/IStrategy.sol\":{\"keccak256\":\"0x20607334ca94739d9c3d9da71f6b8f5bff55bbf171553cfb523be7d26e324ae5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://908d01620cb3674371fc8f3043f00407e4d98ce66c2e63c4e3254889af0644cf\",\"dweb:/ipfs/QmWHxVEHc1Cwt9WDxrukSW6XW9M7Whky6iTVQK97X4E3eD\"]},\"src/core/libraries/Metadata.sol\":{\"keccak256\":\"0x452a95a8762fafd51d36295138f7e14189cbaaca7274d6fd34a59ad57a442d44\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2cc5507da2550ab9bfa0fbb263e703f9e70b831190bb7b2bcdbb231cab49795c\",\"dweb:/ipfs/QmQXCD8v2HppXAX17aH49JvNyyfDYzGMrg63QNabUEXPpn\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"poolId","type":"uint256","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"BaseFeePaid","anonymous":false},{"inputs":[{"internalType":"uint256","name":"baseFee","type":"uint256","indexed":false}],"type":"event","name":"BaseFeeUpdated","anonymous":false},{"inputs":[{"internalType":"uint256","name":"percentFee","type":"uint256","indexed":false}],"type":"event","name":"PercentFeeUpdated","anonymous":false},{"inputs":[{"internalType":"uint256","name":"poolId","type":"uint256","indexed":true},{"internalType":"bytes32","name":"profileId","type":"bytes32","indexed":true},{"internalType":"contract IStrategy","name":"strategy","type":"address","indexed":false},{"internalType":"address","name":"token","type":"address","indexed":false},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false},{"internalType":"struct Metadata","name":"metadata","type":"tuple","components":[{"internalType":"uint256","name":"protocol","type":"uint256"},{"internalType":"string","name":"pointer","type":"string"}],"indexed":false}],"type":"event","name":"PoolCreated","anonymous":false},{"inputs":[{"internalType":"uint256","name":"poolId","type":"uint256","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false},{"internalType":"uint256","name":"fee","type":"uint256","indexed":false}],"type":"event","name":"PoolFunded","anonymous":false},{"inputs":[{"internalType":"uint256","name":"poolId","type":"uint256","indexed":true},{"internalType":"struct Metadata","name":"metadata","type":"tuple","components":[{"internalType":"uint256","name":"protocol","type":"uint256"},{"internalType":"string","name":"pointer","type":"string"}],"indexed":false}],"type":"event","name":"PoolMetadataUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"registry","type":"address","indexed":false}],"type":"event","name":"RegistryUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"strategy","type":"address","indexed":false}],"type":"event","name":"StrategyApproved","anonymous":false},{"inputs":[{"internalType":"address","name":"strategy","type":"address","indexed":false}],"type":"event","name":"StrategyRemoved","anonymous":false},{"inputs":[{"internalType":"address","name":"treasury","type":"address","indexed":false}],"type":"event","name":"TreasuryUpdated","anonymous":false},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"address","name":"_manager","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"addPoolManager"},{"inputs":[{"internalType":"address","name":"_strategy","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"addToCloneableStrategies"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"stateMutability":"payable","type":"function","name":"allocate"},{"inputs":[{"internalType":"uint256[]","name":"_poolIds","type":"uint256[]"},{"internalType":"bytes[]","name":"_datas","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"batchAllocate"},{"inputs":[{"internalType":"uint256[]","name":"_poolIds","type":"uint256[]"},{"internalType":"bytes[]","name":"_data","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"batchRegisterRecipient","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"bytes32","name":"_profileId","type":"bytes32"},{"internalType":"address","name":"_strategy","type":"address"},{"internalType":"bytes","name":"_initStrategyData","type":"bytes"},{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"struct Metadata","name":"_metadata","type":"tuple","components":[{"internalType":"uint256","name":"protocol","type":"uint256"},{"internalType":"string","name":"pointer","type":"string"}]},{"internalType":"address[]","name":"_managers","type":"address[]"}],"stateMutability":"payable","type":"function","name":"createPool","outputs":[{"internalType":"uint256","name":"poolId","type":"uint256"}]},{"inputs":[{"internalType":"bytes32","name":"_profileId","type":"bytes32"},{"internalType":"address","name":"_strategy","type":"address"},{"internalType":"bytes","name":"_initStrategyData","type":"bytes"},{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"struct Metadata","name":"_metadata","type":"tuple","components":[{"internalType":"uint256","name":"protocol","type":"uint256"},{"internalType":"string","name":"pointer","type":"string"}]},{"internalType":"address[]","name":"_managers","type":"address[]"}],"stateMutability":"payable","type":"function","name":"createPoolWithCustomStrategy","outputs":[{"internalType":"uint256","name":"poolId","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"address[]","name":"_recipientIds","type":"address[]"},{"internalType":"bytes","name":"_data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"distribute"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"stateMutability":"payable","type":"function","name":"fundPool"},{"inputs":[],"stateMutability":"view","type":"function","name":"getBaseFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getFeeDenominator","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getPercentFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"}],"stateMutability":"view","type":"function","name":"getPool","outputs":[{"internalType":"struct IAllo.Pool","name":"","type":"tuple","components":[{"internalType":"bytes32","name":"profileId","type":"bytes32"},{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"struct Metadata","name":"metadata","type":"tuple","components":[{"internalType":"uint256","name":"protocol","type":"uint256"},{"internalType":"string","name":"pointer","type":"string"}]},{"internalType":"bytes32","name":"managerRole","type":"bytes32"},{"internalType":"bytes32","name":"adminRole","type":"bytes32"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getRegistry","outputs":[{"internalType":"contract IRegistry","name":"","type":"address"}]},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"}],"stateMutability":"view","type":"function","name":"getStrategy","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getTreasury","outputs":[{"internalType":"address payable","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"internalType":"address","name":"_registry","type":"address"},{"internalType":"address payable","name":"_treasury","type":"address"},{"internalType":"uint256","name":"_percentFee","type":"uint256"},{"internalType":"uint256","name":"_baseFee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"initialize"},{"inputs":[{"internalType":"address","name":"_strategy","type":"address"}],"stateMutability":"view","type":"function","name":"isCloneableStrategy","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"address","name":"_address","type":"address"}],"stateMutability":"view","type":"function","name":"isPoolAdmin","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"address","name":"_address","type":"address"}],"stateMutability":"view","type":"function","name":"isPoolManager","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_recipient","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"recoverFunds"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"stateMutability":"payable","type":"function","name":"registerRecipient","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"_strategy","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"removeFromCloneableStrategies"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"address","name":"_manager","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"removePoolManager"},{"inputs":[{"internalType":"uint256","name":"_baseFee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"updateBaseFee"},{"inputs":[{"internalType":"uint256","name":"_percentFee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"updatePercentFee"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"struct Metadata","name":"_metadata","type":"tuple","components":[{"internalType":"uint256","name":"protocol","type":"uint256"},{"internalType":"string","name":"pointer","type":"string"}]}],"stateMutability":"nonpayable","type":"function","name":"updatePoolMetadata"},{"inputs":[{"internalType":"address","name":"_registry","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"updateRegistry"},{"inputs":[{"internalType":"address payable","name":"_treasury","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"updateTreasury"}],"devdoc":{"kind":"dev","methods":{"addPoolManager(uint256,address)":{"details":"'msg.sender' must be a pool admin.","params":{"_manager":"The address of the manager to add","_poolId":"The ID of the pool to add the manager to"}},"addToCloneableStrategies(address)":{"details":"'msg.sender' must be the Allo contract owner.","params":{"_strategy":"The address of the strategy to add"}},"allocate(uint256,bytes)":{"details":"Each strategy will handle the allocation of funds differently.","params":{"_data":"The data to pass to the strategy and may be handled differently by each strategy.","_poolId":"The ID of the pool to allocate funds from"}},"batchAllocate(uint256[],bytes[])":{"details":"Each strategy will handle the allocation of funds differently"},"batchRegisterRecipient(uint256[],bytes[])":{"params":{"_data":"The data to pass to the strategy and may be handled differently by each strategy","_poolIds":"The pool ID's to register the recipients for"}},"createPool(bytes32,address,bytes,address,uint256,(uint256,string),address[])":{"custom:initstrategydata":"The encoded data will be specific to a given strategy requirements,    reference the strategy implementation of 'initialize()'","details":"'msg.sender' must be owner or member of the profile id passed as '_profileId'.","params":{"_amount":"The amount of the token","_initStrategyData":"The data to initialize the strategy","_managers":"The managers of the pool","_metadata":"The metadata of the pool","_profileId":"The ID of the registry profile, used to check if 'msg.sender' is a member or owner of the profile","_strategy":"The address of the strategy contract the pool will use.","_token":"The address of the token"}},"createPoolWithCustomStrategy(bytes32,address,bytes,address,uint256,(uint256,string),address[])":{"details":"'msg.sender' must be a member or owner of a profile to create a pool with or without a custom strategy, The encoded data      will be specific to a given strategy requirements, reference the strategy implementation of 'initialize()'. The strategy      address passed must not be a cloneable strategy. The strategy address passed must not be the zero address. 'msg.sender' must      be a member or owner of the profile id passed as '_profileId'.","params":{"_amount":"The amount of the token you want to deposit into the pool on initialization","_initStrategyData":"The data to initialize the strategy","_managers":"The managers of the pool, and can be added/removed later by the pool admin","_metadata":"The 'Metadata' of the pool, this uses our 'Meatdata.sol' struct (consistent throughout the protocol)","_profileId":"The 'profileId' of the registry profile, used to check if 'msg.sender' is a member or owner of the profile","_strategy":"The address of the deployed custom strategy","_token":"The address of the token you want to use in your pool"},"returns":{"poolId":"The ID of the pool"}},"distribute(uint256,address[],bytes)":{"details":"Each strategy will handle the distribution of funds differently","params":{"_data":"The data to pass to the strategy and may be handled differently by each strategy","_poolId":"The ID of the pool to distribute from","_recipientIds":"The recipient ids to distribute to"}},"fundPool(uint256,uint256)":{"details":"'msg.value' must be greater than 0 if the token is the native token       or '_amount' must be greater than 0 if the token is not the native token.","params":{"_amount":"The amount to fund the pool with","_poolId":"The ID of the pool to fund"}},"getBaseFee()":{"returns":{"_0":"baseFee The current base fee"}},"getFeeDenominator()":{"details":"1e18 represents 100%","returns":{"_0":"feeDenominator The current fee denominator"}},"getPercentFee()":{"returns":{"_0":"percentFee The current percentage for the fee"}},"getPool(uint256)":{"params":{"_poolId":"The ID of the pool to check"},"returns":{"_0":"pool The 'Pool' struct for the ID of the pool passed in"}},"getRegistry()":{"returns":{"_0":"registry The current registry address"}},"getStrategy(uint256)":{"params":{"_poolId":"The ID of the pool to check"},"returns":{"_0":"strategy The address of the strategy for the ID of the pool passed in"}},"getTreasury()":{"returns":{"_0":"treasury The current treasury address"}},"initialize(address,address,address,uint256,uint256)":{"params":{"_baseFee":"Base fee amount","_owner":"Address of the owner","_percentFee":"Percentage for the fee","_registry":"Address of the registry contract","_treasury":"Address of the treasury"}},"isCloneableStrategy(address)":{"params":{"_strategy":"The address of the strategy to check"},"returns":{"_0":"'true' if the '_strategy' is cloneable, otherwise 'false'"}},"isPoolAdmin(uint256,address)":{"params":{"_address":"The address to check","_poolId":"The ID of the pool to check"},"returns":{"_0":"'true' if the '_address' is a pool admin, otherwise 'false'"}},"isPoolManager(uint256,address)":{"params":{"_address":"The address to check","_poolId":"The ID of the pool to check"},"returns":{"_0":"'true' if the '_address' is a pool manager, otherwise 'false'"}},"recoverFunds(address,address)":{"details":"'msg.sender' must be a pool admin.","params":{"_recipient":"The address to send the recovered funds to","_token":"The token to recover"}},"registerRecipient(uint256,bytes)":{"params":{"_poolId":"The ID of the pool to register the recipient for"}},"removeFromCloneableStrategies(address)":{"details":"'msg.sender' must be the Allo contract owner.","params":{"_strategy":"The address of the strategy to remove"}},"removePoolManager(uint256,address)":{"details":"'msg.sender' must be a pool admin.","params":{"_manager":"The address of the manager to remove","_poolId":"The ID of the pool to remove the manager from"}},"updateBaseFee(uint256)":{"details":"'msg.sender' must be the Allo contract owner.","params":{"_baseFee":"The new base fee"}},"updatePercentFee(uint256)":{"details":"'msg.sender' must be the Allo contract owner.","params":{"_percentFee":"The new percentage for the fee"}},"updatePoolMetadata(uint256,(uint256,string))":{"details":"'msg.sender' must be a pool admin.","params":{"_metadata":"The new metadata to set","_poolId":"The ID of the pool to update"}},"updateRegistry(address)":{"details":"'msg.sender' must be the Allo contract owner.","params":{"_registry":"The new registry address"}},"updateTreasury(address)":{"details":"'msg.sender' must be the Allo contract owner.","params":{"_treasury":"The new treasury address"}}},"version":1},"userdoc":{"kind":"user","methods":{"addPoolManager(uint256,address)":{"notice":"Adds a pool manager to the pool."},"addToCloneableStrategies(address)":{"notice":"Adds a strategy to the cloneable strategies."},"allocate(uint256,bytes)":{"notice":"Allocates funds to a recipient."},"batchAllocate(uint256[],bytes[])":{"notice":"Allocates funds to multiple recipients."},"batchRegisterRecipient(uint256[],bytes[])":{"notice":"Registers a batch of recipients."},"createPool(bytes32,address,bytes,address,uint256,(uint256,string),address[])":{"notice":"Creates a new pool (by cloning a cloneable strategies)."},"createPoolWithCustomStrategy(bytes32,address,bytes,address,uint256,(uint256,string),address[])":{"notice":"Creates a new pool (with a custom strategy)"},"distribute(uint256,address[],bytes)":{"notice":"Distributes funds to recipients and emits {Distributed} event if successful"},"fundPool(uint256,uint256)":{"notice":"Funds a pool."},"getBaseFee()":{"notice":"Returns the current base fee"},"getFeeDenominator()":{"notice":"Returns the current fee denominator"},"getPercentFee()":{"notice":"Returns the current percent fee"},"getPool(uint256)":{"notice":"Returns the 'Pool' struct for a given 'poolId'"},"getRegistry()":{"notice":"Returns the current registry address"},"getStrategy(uint256)":{"notice":"Returns the address of the strategy for a given 'poolId'"},"getTreasury()":{"notice":"Returns the current treasury address"},"initialize(address,address,address,uint256,uint256)":{"notice":"Initialize the Allo contract"},"isCloneableStrategy(address)":{"notice":"Checks if a strategy is cloneable (is in the cloneableStrategies mapping)."},"isPoolAdmin(uint256,address)":{"notice":"Checks if an address is a pool admin."},"isPoolManager(uint256,address)":{"notice":"Checks if an address is a pool manager."},"recoverFunds(address,address)":{"notice":"Recovers funds from a pool."},"registerRecipient(uint256,bytes)":{"notice":"Registers a recipient and emits {Registered} event if successful and may be handled differently by each strategy."},"removeFromCloneableStrategies(address)":{"notice":"Removes a strategy from the cloneable strategies."},"removePoolManager(uint256,address)":{"notice":"Removes a pool manager from the pool."},"updateBaseFee(uint256)":{"notice":"Updates the base fee."},"updatePercentFee(uint256)":{"notice":"Updates the percentage for the fee."},"updatePoolMetadata(uint256,(uint256,string))":{"notice":"Updates a pools metadata."},"updateRegistry(address)":{"notice":"Update the registry address."},"updateTreasury(address)":{"notice":"Updates the treasury address."}},"version":1}},"settings":{"remappings":["ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/","solady/=lib/solady/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/core/interfaces/IAllo.sol":"IAllo"},"libraries":{}},"sources":{"src/core/interfaces/IAllo.sol":{"keccak256":"0xd3ea236154c6a35dfa5699f226283b92f20be90151c89726b64c3e301994dd80","urls":["bzz-raw://6b858848260585dbccbbb08c9dfc5e744cb92ed4c73a9a6e9fb7bf66c975fbea","dweb:/ipfs/QmQCn1AQyyfEEHk616Mhye7zswyvtgqChYCPzKt9gKF6pj"],"license":"AGPL-3.0-only"},"src/core/interfaces/IRegistry.sol":{"keccak256":"0x84702fb3f5f7f6a6a93165f60d96e4ca879050aeb3004e389d52dac0cc6c2f79","urls":["bzz-raw://635148af139b9bd5a18843c76d5aef3892038330e4cf8d23a327bea94f4d9715","dweb:/ipfs/QmcxNUKJPYTCLKxMPduRFMdwhHE1hhghWK72HF8krEsADv"],"license":"MIT"},"src/core/interfaces/IStrategy.sol":{"keccak256":"0x20607334ca94739d9c3d9da71f6b8f5bff55bbf171553cfb523be7d26e324ae5","urls":["bzz-raw://908d01620cb3674371fc8f3043f00407e4d98ce66c2e63c4e3254889af0644cf","dweb:/ipfs/QmWHxVEHc1Cwt9WDxrukSW6XW9M7Whky6iTVQK97X4E3eD"],"license":"AGPL-3.0-only"},"src/core/libraries/Metadata.sol":{"keccak256":"0x452a95a8762fafd51d36295138f7e14189cbaaca7274d6fd34a59ad57a442d44","urls":["bzz-raw://2cc5507da2550ab9bfa0fbb263e703f9e70b831190bb7b2bcdbb231cab49795c","dweb:/ipfs/QmQXCD8v2HppXAX17aH49JvNyyfDYzGMrg63QNabUEXPpn"],"license":"AGPL-3.0-only"}},"version":1},"ast":{"absolutePath":"src/core/interfaces/IAllo.sol","id":42562,"exportedSymbols":{"IAllo":[42561],"IRegistry":[42753],"IStrategy":[42920],"Metadata":[43019]},"nodeType":"SourceUnit","src":"42:17842:21","nodes":[{"id":42204,"nodeType":"PragmaDirective","src":"42:24:21","nodes":[],"literals":["solidity","^","0.8",".19"]},{"id":42206,"nodeType":"ImportDirective","src":"82:42:21","nodes":[],"absolutePath":"src/core/interfaces/IRegistry.sol","file":"./IRegistry.sol","nameLocation":"-1:-1:-1","scope":42562,"sourceUnit":42754,"symbolAliases":[{"foreign":{"id":42205,"name":"IRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42753,"src":"90:9:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":42208,"nodeType":"ImportDirective","src":"125:42:21","nodes":[],"absolutePath":"src/core/interfaces/IStrategy.sol","file":"./IStrategy.sol","nameLocation":"-1:-1:-1","scope":42562,"sourceUnit":42921,"symbolAliases":[{"foreign":{"id":42207,"name":"IStrategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42920,"src":"133:9:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":42210,"nodeType":"ImportDirective","src":"190:51:21","nodes":[],"absolutePath":"src/core/libraries/Metadata.sol","file":"../libraries/Metadata.sol","nameLocation":"-1:-1:-1","scope":42562,"sourceUnit":43020,"symbolAliases":[{"foreign":{"id":42209,"name":"Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43019,"src":"198:8:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":42561,"nodeType":"ContractDefinition","src":"4531:13352:21","nodes":[{"id":42226,"nodeType":"StructDefinition","src":"4718:180:21","nodes":[],"canonicalName":"IAllo.Pool","members":[{"constant":false,"id":42213,"mutability":"mutable","name":"profileId","nameLocation":"4748:9:21","nodeType":"VariableDeclaration","scope":42226,"src":"4740:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":42212,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4740:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":42216,"mutability":"mutable","name":"strategy","nameLocation":"4777:8:21","nodeType":"VariableDeclaration","scope":42226,"src":"4767:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$42920","typeString":"contract IStrategy"},"typeName":{"id":42215,"nodeType":"UserDefinedTypeName","pathNode":{"id":42214,"name":"IStrategy","nameLocations":["4767:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":42920,"src":"4767:9:21"},"referencedDeclaration":42920,"src":"4767:9:21","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$42920","typeString":"contract IStrategy"}},"visibility":"internal"},{"constant":false,"id":42218,"mutability":"mutable","name":"token","nameLocation":"4803:5:21","nodeType":"VariableDeclaration","scope":42226,"src":"4795:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":42217,"name":"address","nodeType":"ElementaryTypeName","src":"4795:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":42221,"mutability":"mutable","name":"metadata","nameLocation":"4827:8:21","nodeType":"VariableDeclaration","scope":42226,"src":"4818:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Metadata_$43019_storage_ptr","typeString":"struct Metadata"},"typeName":{"id":42220,"nodeType":"UserDefinedTypeName","pathNode":{"id":42219,"name":"Metadata","nameLocations":["4818:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":43019,"src":"4818:8:21"},"referencedDeclaration":43019,"src":"4818:8:21","typeDescriptions":{"typeIdentifier":"t_struct$_Metadata_$43019_storage_ptr","typeString":"struct Metadata"}},"visibility":"internal"},{"constant":false,"id":42223,"mutability":"mutable","name":"managerRole","nameLocation":"4853:11:21","nodeType":"VariableDeclaration","scope":42226,"src":"4845:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":42222,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4845:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":42225,"mutability":"mutable","name":"adminRole","nameLocation":"4882:9:21","nodeType":"VariableDeclaration","scope":42226,"src":"4874:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":42224,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4874:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Pool","nameLocation":"4725:4:21","scope":42561,"visibility":"public"},{"id":42243,"nodeType":"EventDefinition","src":"5405:193:21","nodes":[],"anonymous":false,"documentation":{"id":42227,"nodeType":"StructuredDocumentation","src":"4998:402:21","text":"@notice Event emitted when a new pool is created\n @param poolId ID of the pool created\n @param profileId ID of the profile the pool is associated with\n @param strategy Address of the strategy contract\n @param token Address of the token pool was funded with when created\n @param amount Amount pool was funded with when created\n @param metadata Pool metadata"},"eventSelector":"69bcb5a6cf6a3c95185cbb451e77787240c866dd2e8332597e3013ff18a1aba1","name":"PoolCreated","nameLocation":"5411:11:21","parameters":{"id":42242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42229,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"5448:6:21","nodeType":"VariableDeclaration","scope":42243,"src":"5432:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42228,"name":"uint256","nodeType":"ElementaryTypeName","src":"5432:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":42231,"indexed":true,"mutability":"mutable","name":"profileId","nameLocation":"5480:9:21","nodeType":"VariableDeclaration","scope":42243,"src":"5464:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":42230,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5464:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":42234,"indexed":false,"mutability":"mutable","name":"strategy","nameLocation":"5509:8:21","nodeType":"VariableDeclaration","scope":42243,"src":"5499:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$42920","typeString":"contract IStrategy"},"typeName":{"id":42233,"nodeType":"UserDefinedTypeName","pathNode":{"id":42232,"name":"IStrategy","nameLocations":["5499:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":42920,"src":"5499:9:21"},"referencedDeclaration":42920,"src":"5499:9:21","typeDescriptions":{"typeIdentifier":"t_contract$_IStrategy_$42920","typeString":"contract IStrategy"}},"visibility":"internal"},{"constant":false,"id":42236,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"5535:5:21","nodeType":"VariableDeclaration","scope":42243,"src":"5527:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":42235,"name":"address","nodeType":"ElementaryTypeName","src":"5527:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":42238,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"5558:6:21","nodeType":"VariableDeclaration","scope":42243,"src":"5550:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42237,"name":"uint256","nodeType":"ElementaryTypeName","src":"5550:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":42241,"indexed":false,"mutability":"mutable","name":"metadata","nameLocation":"5583:8:21","nodeType":"VariableDeclaration","scope":42243,"src":"5574:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Metadata_$43019_memory_ptr","typeString":"struct Metadata"},"typeName":{"id":42240,"nodeType":"UserDefinedTypeName","pathNode":{"id":42239,"name":"Metadata","nameLocations":["5574:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":43019,"src":"5574:8:21"},"referencedDeclaration":43019,"src":"5574:8:21","typeDescriptions":{"typeIdentifier":"t_struct$_Metadata_$43019_storage_ptr","typeString":"struct Metadata"}},"visibility":"internal"}],"src":"5422:175:21"}},{"id":42251,"nodeType":"EventDefinition","src":"5761:69:21","nodes":[],"anonymous":false,"documentation":{"id":42244,"nodeType":"StructuredDocumentation","src":"5604:152:21","text":"@notice Emitted when a pools metadata is updated\n @param poolId ID of the pool updated\n @param metadata Pool metadata that was updated"},"eventSelector":"14f52b76bda9e4c482842cefda2968d332933577988f224e80aae18fba10edf0","name":"PoolMetadataUpdated","nameLocation":"5767:19:21","parameters":{"id":42250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42246,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"5803:6:21","nodeType":"VariableDeclaration","scope":42251,"src":"5787:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42245,"name":"uint256","nodeType":"ElementaryTypeName","src":"5787:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":42249,"indexed":false,"mutability":"mutable","name":"metadata","nameLocation":"5820:8:21","nodeType":"VariableDeclaration","scope":42251,"src":"5811:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Metadata_$43019_memory_ptr","typeString":"struct Metadata"},"typeName":{"id":42248,"nodeType":"UserDefinedTypeName","pathNode":{"id":42247,"name":"Metadata","nameLocations":["5811:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":43019,"src":"5811:8:21"},"referencedDeclaration":43019,"src":"5811:8:21","typeDescriptions":{"typeIdentifier":"t_struct$_Metadata_$43019_storage_ptr","typeString":"struct Metadata"}},"visibility":"internal"}],"src":"5786:43:21"}},{"id":42260,"nodeType":"EventDefinition","src":"6032:70:21","nodes":[],"anonymous":false,"documentation":{"id":42252,"nodeType":"StructuredDocumentation","src":"5836:191:21","text":"@notice Emitted when a pool is funded\n @param poolId ID of the pool funded\n @param amount Amount funded to the pool\n @param fee Amount of the fee paid to the treasury"},"eventSelector":"bf59838198f4ea92f663f5c1fc697f151a1b746b7dff86d564f250a55cbb4851","name":"PoolFunded","nameLocation":"6038:10:21","parameters":{"id":42259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42254,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"6065:6:21","nodeType":"VariableDeclaration","scope":42260,"src":"6049:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42253,"name":"uint256","nodeType":"ElementaryTypeName","src":"6049:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":42256,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"6081:6:21","nodeType":"VariableDeclaration","scope":42260,"src":"6073:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42255,"name":"uint256","nodeType":"ElementaryTypeName","src":"6073:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":42258,"indexed":false,"mutability":"mutable","name":"fee","nameLocation":"6097:3:21","nodeType":"VariableDeclaration","scope":42260,"src":"6089:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42257,"name":"uint256","nodeType":"ElementaryTypeName","src":"6089:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6048:53:21"}},{"id":42267,"nodeType":"EventDefinition","src":"6271:58:21","nodes":[],"anonymous":false,"documentation":{"id":42261,"nodeType":"StructuredDocumentation","src":"6108:158:21","text":"@notice Emitted when the base fee is paid\n @param poolId ID of the pool the base fee was paid for\n @param amount Amount of the base fee paid"},"eventSelector":"02e340b51c6ae66fd22509c9b016f224c47a54063d4259fe3d860958e9eaac72","name":"BaseFeePaid","nameLocation":"6277:11:21","parameters":{"id":42266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42263,"indexed":true,"mutability":"mutable","name":"poolId","nameLocation":"6305:6:21","nodeType":"VariableDeclaration","scope":42267,"src":"6289:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42262,"name":"uint256","nodeType":"ElementaryTypeName","src":"6289:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":42265,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"6321:6:21","nodeType":"VariableDeclaration","scope":42267,"src":"6313:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42264,"name":"uint256","nodeType":"ElementaryTypeName","src":"6313:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6288:40:21"}},{"id":42272,"nodeType":"EventDefinition","src":"6448:40:21","nodes":[],"anonymous":false,"documentation":{"id":42268,"nodeType":"StructuredDocumentation","src":"6335:108:21","text":"@notice Emitted when the treasury address is updated\n @param treasury Address of the new treasury"},"eventSelector":"7dae230f18360d76a040c81f050aa14eb9d6dc7901b20fc5d855e2a20fe814d1","name":"TreasuryUpdated","nameLocation":"6454:15:21","parameters":{"id":42271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42270,"indexed":false,"mutability":"mutable","name":"treasury","nameLocation":"6478:8:21","nodeType":"VariableDeclaration","scope":42272,"src":"6470:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":42269,"name":"address","nodeType":"ElementaryTypeName","src":"6470:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6469:18:21"}},{"id":42277,"nodeType":"EventDefinition","src":"6603:44:21","nodes":[],"anonymous":false,"documentation":{"id":42273,"nodeType":"StructuredDocumentation","src":"6494:104:21","text":"@notice Emitted when the percent fee is updated\n @param percentFee New percentage for the fee"},"eventSelector":"9e826789de2de708fd9f09edea1182545e543893caa8ff71f8eb3aab50a4b065","name":"PercentFeeUpdated","nameLocation":"6609:17:21","parameters":{"id":42276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42275,"indexed":false,"mutability":"mutable","name":"percentFee","nameLocation":"6635:10:21","nodeType":"VariableDeclaration","scope":42277,"src":"6627:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42274,"name":"uint256","nodeType":"ElementaryTypeName","src":"6627:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6626:20:21"}},{"id":42282,"nodeType":"EventDefinition","src":"6749:38:21","nodes":[],"anonymous":false,"documentation":{"id":42278,"nodeType":"StructuredDocumentation","src":"6653:91:21","text":"@notice Emitted when the base fee is updated\n @param baseFee New base fee amount"},"eventSelector":"803bee7e92bbc6ae7a1551f9f4ed3e31a8ea8df32e93332f41b0028f1091f9c3","name":"BaseFeeUpdated","nameLocation":"6755:14:21","parameters":{"id":42281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42280,"indexed":false,"mutability":"mutable","name":"baseFee","nameLocation":"6778:7:21","nodeType":"VariableDeclaration","scope":42282,"src":"6770:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42279,"name":"uint256","nodeType":"ElementaryTypeName","src":"6770:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6769:17:21"}},{"id":42287,"nodeType":"EventDefinition","src":"6906:40:21","nodes":[],"anonymous":false,"documentation":{"id":42283,"nodeType":"StructuredDocumentation","src":"6793:108:21","text":"@notice Emitted when the registry address is updated\n @param registry Address of the new registry"},"eventSelector":"d6ceddf6d2a22f21c7c81675c518004eff43bc5c8a6fc32a0b748e69d58671cd","name":"RegistryUpdated","nameLocation":"6912:15:21","parameters":{"id":42286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42285,"indexed":false,"mutability":"mutable","name":"registry","nameLocation":"6936:8:21","nodeType":"VariableDeclaration","scope":42287,"src":"6928:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":42284,"name":"address","nodeType":"ElementaryTypeName","src":"6928:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6927:18:21"}},{"id":42292,"nodeType":"EventDefinition","src":"7099:41:21","nodes":[],"anonymous":false,"documentation":{"id":42288,"nodeType":"StructuredDocumentation","src":"6952:142:21","text":"@notice Emitted when a strategy is approved and added to the cloneable strategies\n @param strategy Address of the strategy approved"},"eventSelector":"960dd94cbb79169f09a4e445d58b895df2d9bffa5b31055d0932d801724a20d1","name":"StrategyApproved","nameLocation":"7105:16:21","parameters":{"id":42291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42290,"indexed":false,"mutability":"mutable","name":"strategy","nameLocation":"7130:8:21","nodeType":"VariableDeclaration","scope":42292,"src":"7122:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":42289,"name":"address","nodeType":"ElementaryTypeName","src":"7122:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7121:18:21"}},{"id":42297,"nodeType":"EventDefinition","src":"7283:40:21","nodes":[],"anonymous":false,"documentation":{"id":42293,"nodeType":"StructuredDocumentation","src":"7146:132:21","text":"@notice Emitted when a strategy is removed from the cloneable strategies\n @param strategy Address of the strategy removed"},"eventSelector":"09a1db4b80c32706328728508c941a6b954f31eb5affd32f236c1fd405f8fea4","name":"StrategyRemoved","nameLocation":"7289:15:21","parameters":{"id":42296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42295,"indexed":false,"mutability":"mutable","name":"strategy","nameLocation":"7313:8:21","nodeType":"VariableDeclaration","scope":42297,"src":"7305:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":42294,"name":"address","nodeType":"ElementaryTypeName","src":"7305:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7304:18:21"}},{"id":42311,"nodeType":"FunctionDefinition","src":"7750:176:21","nodes":[],"documentation":{"id":42298,"nodeType":"StructuredDocumentation","src":"7465:280:21","text":"@notice Initialize the Allo contract\n @param _owner Address of the owner\n @param _registry Address of the registry contract\n @param _treasury Address of the treasury\n @param _percentFee Percentage for the fee\n @param _baseFee Base fee amount"},"functionSelector":"a6b63eb8","implemented":false,"kind":"function","modifiers":[],"name":"initialize","nameLocation":"7759:10:21","parameters":{"id":42309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42300,"mutability":"mutable","name":"_owner","nameLocation":"7787:6:21","nodeType":"VariableDeclaration","scope":42311,"src":"7779:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":42299,"name":"address","nodeType":"ElementaryTypeName","src":"7779:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":42302,"mutability":"mutable","name":"_registry","nameLocation":"7811:9:21","nodeType":"VariableDeclaration","scope":42311,"src":"7803:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":42301,"name":"address","nodeType":"ElementaryTypeName","src":"7803:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":42304,"mutability":"mutable","name":"_treasury","nameLocation":"7846:9:21","nodeType":"VariableDeclaration","scope":42311,"src":"7830:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":42303,"name":"address","nodeType":"ElementaryTypeName","src":"7830:15:21","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":42306,"mutability":"mutable","name":"_percentFee","nameLocation":"7873:11:21","nodeType":"VariableDeclaration","scope":42311,"src":"7865:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42305,"name":"uint256","nodeType":"ElementaryTypeName","src":"7865:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":42308,"mutability":"mutable","name":"_baseFee","nameLocation":"7902:8:21","nodeType":"VariableDeclaration","scope":42311,"src":"7894:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42307,"name":"uint256","nodeType":"ElementaryTypeName","src":"7894:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7769:147:21"},"returnParameters":{"id":42310,"nodeType":"ParameterList","parameters":[],"src":"7925:0:21"},"scope":42561,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":42333,"nodeType":"FunctionDefinition","src":"9188:301:21","nodes":[],"documentation":{"id":42312,"nodeType":"StructuredDocumentation","src":"7932:1251:21","text":"@notice Creates a new pool (with a custom strategy)\n @dev 'msg.sender' must be a member or owner of a profile to create a pool with or without a custom strategy, The encoded data\n      will be specific to a given strategy requirements, reference the strategy implementation of 'initialize()'. The strategy\n      address passed must not be a cloneable strategy. The strategy address passed must not be the zero address. 'msg.sender' must\n      be a member or owner of the profile id passed as '_profileId'.\n @param _profileId The 'profileId' of the registry profile, used to check if 'msg.sender' is a member or owner of the profile\n @param _strategy The address of the deployed custom strategy\n @param _initStrategyData The data to initialize the strategy\n @param _token The address of the token you want to use in your pool\n @param _amount The amount of the token you want to deposit into the pool on initialization\n @param _metadata The 'Metadata' of the pool, this uses our 'Meatdata.sol' struct (consistent throughout the protocol)\n @param _managers The managers of the pool, and can be added/removed later by the pool admin\n @return poolId The ID of the pool"},"functionSelector":"e1007d4a","implemented":false,"kind":"function","modifiers":[],"name":"createPoolWithCustomStrategy","nameLocation":"9197:28:21","parameters":{"id":42329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42314,"mutability":"mutable","name":"_profileId","nameLocation":"9243:10:21","nodeType":"VariableDeclaration","scope":42333,"src":"9235:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":42313,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9235:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":42316,"mutability":"mutable","name":"_strategy","nameLocation":"9271:9:21","nodeType":"VariableDeclaration","scope":42333,"src":"9263:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":42315,"name":"address","nodeType":"ElementaryTypeName","src":"9263:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":42318,"mutability":"mutable","name":"_initStrategyData","nameLocation":"9303:17:21","nodeType":"VariableDeclaration","scope":42333,"src":"9290:30:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":42317,"name":"bytes","nodeType":"ElementaryTypeName","src":"9290:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":42320,"mutability":"mutable","name":"_token","nameLocation":"9338:6:21","nodeType":"VariableDeclaration","scope":42333,"src":"9330:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":42319,"name":"address","nodeType":"ElementaryTypeName","src":"9330:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":42322,"mutability":"mutable","name":"_amount","nameLocation":"9362:7:21","nodeType":"VariableDeclaration","scope":42333,"src":"9354:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42321,"name":"uint256","nodeType":"ElementaryTypeName","src":"9354:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":42325,"mutability":"mutable","name":"_metadata","nameLocation":"9395:9:21","nodeType":"VariableDeclaration","scope":42333,"src":"9379:25:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Metadata_$43019_memory_ptr","typeString":"struct Metadata"},"typeName":{"id":42324,"nodeType":"UserDefinedTypeName","pathNode":{"id":42323,"name":"Metadata","nameLocations":["9379:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":43019,"src":"9379:8:21"},"referencedDeclaration":43019,"src":"9379:8:21","typeDescriptions":{"typeIdentifier":"t_struct$_Metadata_$43019_storage_ptr","typeString":"struct Metadata"}},"visibility":"internal"},{"constant":false,"id":42328,"mutability":"mutable","name":"_managers","nameLocation":"9431:9:21","nodeType":"VariableDeclaration","scope":42333,"src":"9414:26:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":42326,"name":"address","nodeType":"ElementaryTypeName","src":"9414:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":42327,"nodeType":"ArrayTypeName","src":"9414:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"9225:221:21"},"returnParameters":{"id":42332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42331,"mutability":"mutable","name":"poolId","nameLocation":"9481:6:21","nodeType":"VariableDeclaration","scope":42333,"src":"9473:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42330,"name":"uint256","nodeType":"ElementaryTypeName","src":"9473:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9472:16:21"},"scope":42561,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":42355,"nodeType":"FunctionDefinition","src":"10295:283:21","nodes":[],"documentation":{"id":42334,"nodeType":"StructuredDocumentation","src":"9495:795:21","text":"@notice Creates a new pool (by cloning a cloneable strategies).\n @dev 'msg.sender' must be owner or member of the profile id passed as '_profileId'.\n @param _profileId The ID of the registry profile, used to check if 'msg.sender' is a member or owner of the profile\n @param _strategy The address of the strategy contract the pool will use.\n @param _initStrategyData The data to initialize the strategy\n @param _token The address of the token\n @param _amount The amount of the token\n @param _metadata The metadata of the pool\n @param _managers The managers of the pool\n @custom:initstrategydata The encoded data will be specific to a given strategy requirements,\n    reference the strategy implementation of 'initialize()'"},"functionSelector":"77da8caf","implemented":false,"kind":"function","modifiers":[],"name":"createPool","nameLocation":"10304:10:21","parameters":{"id":42351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42336,"mutability":"mutable","name":"_profileId","nameLocation":"10332:10:21","nodeType":"VariableDeclaration","scope":42355,"src":"10324:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":42335,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10324:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":42338,"mutability":"mutable","name":"_strategy","nameLocation":"10360:9:21","nodeType":"VariableDeclaration","scope":42355,"src":"10352:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":42337,"name":"address","nodeType":"ElementaryTypeName","src":"10352:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":42340,"mutability":"mutable","name":"_initStrategyData","nameLocation":"10392:17:21","nodeType":"VariableDeclaration","scope":42355,"src":"10379:30:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":42339,"name":"bytes","nodeType":"ElementaryTypeName","src":"10379:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":42342,"mutability":"mutable","name":"_token","nameLocation":"10427:6:21","nodeType":"VariableDeclaration","scope":42355,"src":"10419:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":42341,"name":"address","nodeType":"ElementaryTypeName","src":"10419:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":42344,"mutability":"mutable","name":"_amount","nameLocation":"10451:7:21","nodeType":"VariableDeclaration","scope":42355,"src":"10443:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42343,"name":"uint256","nodeType":"ElementaryTypeName","src":"10443:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":42347,"mutability":"mutable","name":"_metadata","nameLocation":"10484:9:21","nodeType":"VariableDeclaration","scope":42355,"src":"10468:25:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Metadata_$43019_memory_ptr","typeString":"struct Metadata"},"typeName":{"id":42346,"nodeType":"UserDefinedTypeName","pathNode":{"id":42345,"name":"Metadata","nameLocations":["10468:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":43019,"src":"10468:8:21"},"referencedDeclaration":43019,"src":"10468:8:21","typeDescriptions":{"typeIdentifier":"t_struct$_Metadata_$43019_storage_ptr","typeString":"struct Metadata"}},"visibility":"internal"},{"constant":false,"id":42350,"mutability":"mutable","name":"_managers","nameLocation":"10520:9:21","nodeType":"VariableDeclaration","scope":42355,"src":"10503:26:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":42348,"name":"address","nodeType":"ElementaryTypeName","src":"10503:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":42349,"nodeType":"ArrayTypeName","src":"10503:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10314:221:21"},"returnParameters":{"id":42354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42353,"mutability":"mutable","name":"poolId","nameLocation":"10570:6:21","nodeType":"VariableDeclaration","scope":42355,"src":"10562:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42352,"name":"uint256","nodeType":"ElementaryTypeName","src":"10562:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10561:16:21"},"scope":42561,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":42364,"nodeType":"FunctionDefinition","src":"10775:103:21","nodes":[],"documentation":{"id":42356,"nodeType":"StructuredDocumentation","src":"10584:186:21","text":"@notice Updates a pools metadata.\n @dev 'msg.sender' must be a pool admin.\n @param _poolId The ID of the pool to update\n @param _metadata The new metadata to set"},"functionSelector":"5f9ca138","implemented":false,"kind":"function","modifiers":[],"name":"updatePoolMetadata","nameLocation":"10784:18:21","parameters":{"id":42362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42358,"mutability":"mutable","name":"_poolId","nameLocation":"10820:7:21","nodeType":"VariableDeclaration","scope":42364,"src":"10812:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42357,"name":"uint256","nodeType":"ElementaryTypeName","src":"10812:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":42361,"mutability":"mutable","name":"_metadata","nameLocation":"10853:9:21","nodeType":"VariableDeclaration","scope":42364,"src":"10837:25:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Metadata_$43019_memory_ptr","typeString":"struct Metadata"},"typeName":{"id":42360,"nodeType":"UserDefinedTypeName","pathNode":{"id":42359,"name":"Metadata","nameLocations":["10837:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":43019,"src":"10837:8:21"},"referencedDeclaration":43019,"src":"10837:8:21","typeDescriptions":{"typeIdentifier":"t_struct$_Metadata_$43019_storage_ptr","typeString":"struct Metadata"}},"visibility":"internal"}],"src":"10802:66:21"},"returnParameters":{"id":42363,"nodeType":"ParameterList","parameters":[],"src":"10877:0:21"},"scope":42561,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":42370,"nodeType":"FunctionDefinition","src":"11038:52:21","nodes":[],"documentation":{"id":42365,"nodeType":"StructuredDocumentation","src":"10884:149:21","text":"@notice Update the registry address.\n @dev 'msg.sender' must be the Allo contract owner.\n @param _registry The new registry address"},"functionSelector":"1a5da6c8","implemented":false,"kind":"function","modifiers":[],"name":"updateRegistry","nameLocation":"11047:14:21","parameters":{"id":42368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42367,"mutability":"mutable","name":"_registry","nameLocation":"11070:9:21","nodeType":"VariableDeclaration","scope":42370,"src":"11062:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":42366,"name":"address","nodeType":"ElementaryTypeName","src":"11062:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11061:19:21"},"returnParameters":{"id":42369,"nodeType":"ParameterList","parameters":[],"src":"11089:0:21"},"scope":42561,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":42376,"nodeType":"FunctionDefinition","src":"11251:60:21","nodes":[],"documentation":{"id":42371,"nodeType":"StructuredDocumentation","src":"11096:150:21","text":"@notice Updates the treasury address.\n @dev 'msg.sender' must be the Allo contract owner.\n @param _treasury The new treasury address"},"functionSelector":"7f51bb1f","implemented":false,"kind":"function","modifiers":[],"name":"updateTreasury","nameLocation":"11260:14:21","parameters":{"id":42374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42373,"mutability":"mutable","name":"_treasury","nameLocation":"11291:9:21","nodeType":"VariableDeclaration","scope":42376,"src":"11275:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":42372,"name":"address","nodeType":"ElementaryTypeName","src":"11275:15:21","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"11274:27:21"},"returnParameters":{"id":42375,"nodeType":"ParameterList","parameters":[],"src":"11310:0:21"},"scope":42561,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":42382,"nodeType":"FunctionDefinition","src":"11486:56:21","nodes":[],"documentation":{"id":42377,"nodeType":"StructuredDocumentation","src":"11317:164:21","text":"@notice Updates the percentage for the fee.\n @dev 'msg.sender' must be the Allo contract owner.\n @param _percentFee The new percentage for the fee"},"functionSelector":"f54fc4a0","implemented":false,"kind":"function","modifiers":[],"name":"updatePercentFee","nameLocation":"11495:16:21","parameters":{"id":42380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42379,"mutability":"mutable","name":"_percentFee","nameLocation":"11520:11:21","nodeType":"VariableDeclaration","scope":42382,"src":"11512:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42378,"name":"uint256","nodeType":"ElementaryTypeName","src":"11512:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11511:21:21"},"returnParameters":{"id":42381,"nodeType":"ParameterList","parameters":[],"src":"11541:0:21"},"scope":42561,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":42388,"nodeType":"FunctionDefinition","src":"11686:50:21","nodes":[],"documentation":{"id":42383,"nodeType":"StructuredDocumentation","src":"11548:133:21","text":"@notice Updates the base fee.\n @dev 'msg.sender' must be the Allo contract owner.\n @param _baseFee The new base fee"},"functionSelector":"8e690186","implemented":false,"kind":"function","modifiers":[],"name":"updateBaseFee","nameLocation":"11695:13:21","parameters":{"id":42386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42385,"mutability":"mutable","name":"_baseFee","nameLocation":"11717:8:21","nodeType":"VariableDeclaration","scope":42388,"src":"11709:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42384,"name":"uint256","nodeType":"ElementaryTypeName","src":"11709:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11708:18:21"},"returnParameters":{"id":42387,"nodeType":"ParameterList","parameters":[],"src":"11735:0:21"},"scope":42561,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":42394,"nodeType":"FunctionDefinition","src":"11922:62:21","nodes":[],"documentation":{"id":42389,"nodeType":"StructuredDocumentation","src":"11742:175:21","text":"@notice Adds a strategy to the cloneable strategies.\n @dev 'msg.sender' must be the Allo contract owner.\n @param _strategy The address of the strategy to add"},"functionSelector":"41bba0b4","implemented":false,"kind":"function","modifiers":[],"name":"addToCloneableStrategies","nameLocation":"11931:24:21","parameters":{"id":42392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42391,"mutability":"mutable","name":"_strategy","nameLocation":"11964:9:21","nodeType":"VariableDeclaration","scope":42394,"src":"11956:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":42390,"name":"address","nodeType":"ElementaryTypeName","src":"11956:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11955:19:21"},"returnParameters":{"id":42393,"nodeType":"ParameterList","parameters":[],"src":"11983:0:21"},"scope":42561,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":42400,"nodeType":"FunctionDefinition","src":"12178:67:21","nodes":[],"documentation":{"id":42395,"nodeType":"StructuredDocumentation","src":"11990:183:21","text":"@notice Removes a strategy from the cloneable strategies.\n @dev 'msg.sender' must be the Allo contract owner.\n @param _strategy The address of the strategy to remove"},"functionSelector":"031e2fa1","implemented":false,"kind":"function","modifiers":[],"name":"removeFromCloneableStrategies","nameLocation":"12187:29:21","parameters":{"id":42398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42397,"mutability":"mutable","name":"_strategy","nameLocation":"12225:9:21","nodeType":"VariableDeclaration","scope":42400,"src":"12217:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":42396,"name":"address","nodeType":"ElementaryTypeName","src":"12217:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12216:19:21"},"returnParameters":{"id":42399,"nodeType":"ParameterList","parameters":[],"src":"12244:0:21"},"scope":42561,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":42408,"nodeType":"FunctionDefinition","src":"12470:68:21","nodes":[],"documentation":{"id":42401,"nodeType":"StructuredDocumentation","src":"12251:214:21","text":"@notice Adds a pool manager to the pool.\n @dev 'msg.sender' must be a pool admin.\n @param _poolId The ID of the pool to add the manager to\n @param _manager The address of the manager to add"},"functionSelector":"2cf682b0","implemented":false,"kind":"function","modifiers":[],"name":"addPoolManager","nameLocation":"12479:14:21","parameters":{"id":42406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42403,"mutability":"mutable","name":"_poolId","nameLocation":"12502:7:21","nodeType":"VariableDeclaration","scope":42408,"src":"12494:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42402,"name":"uint256","nodeType":"ElementaryTypeName","src":"12494:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":42405,"mutability":"mutable","name":"_manager","nameLocation":"12519:8:21","nodeType":"VariableDeclaration","scope":42408,"src":"12511:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":42404,"name":"address","nodeType":"ElementaryTypeName","src":"12511:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12493:35:21"},"returnParameters":{"id":42407,"nodeType":"ParameterList","parameters":[],"src":"12537:0:21"},"scope":42561,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":42416,"nodeType":"FunctionDefinition","src":"12776:71:21","nodes":[],"documentation":{"id":42409,"nodeType":"StructuredDocumentation","src":"12544:227:21","text":"@notice Removes a pool manager from the pool.\n @dev 'msg.sender' must be a pool admin.\n @param _poolId The ID of the pool to remove the manager from\n @param _manager The address of the manager to remove"},"functionSelector":"7f5a70bd","implemented":false,"kind":"function","modifiers":[],"name":"removePoolManager","nameLocation":"12785:17:21","parameters":{"id":42414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42411,"mutability":"mutable","name":"_poolId","nameLocation":"12811:7:21","nodeType":"VariableDeclaration","scope":42416,"src":"12803:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42410,"name":"uint256","nodeType":"ElementaryTypeName","src":"12803:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":42413,"mutability":"mutable","name":"_manager","nameLocation":"12828:8:21","nodeType":"VariableDeclaration","scope":42416,"src":"12820:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":42412,"name":"address","nodeType":"ElementaryTypeName","src":"12820:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12802:35:21"},"returnParameters":{"id":42415,"nodeType":"ParameterList","parameters":[],"src":"12846:0:21"},"scope":42561,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":42424,"nodeType":"FunctionDefinition","src":"13057:67:21","nodes":[],"documentation":{"id":42417,"nodeType":"StructuredDocumentation","src":"12853:199:21","text":"@notice Recovers funds from a pool.\n @dev 'msg.sender' must be a pool admin.\n @param _token The token to recover\n @param _recipient The address to send the recovered funds to"},"functionSelector":"24ae6a27","implemented":false,"kind":"function","modifiers":[],"name":"recoverFunds","nameLocation":"13066:12:21","parameters":{"id":42422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42419,"mutability":"mutable","name":"_token","nameLocation":"13087:6:21","nodeType":"VariableDeclaration","scope":42424,"src":"13079:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":42418,"name":"address","nodeType":"ElementaryTypeName","src":"13079:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":42421,"mutability":"mutable","name":"_recipient","nameLocation":"13103:10:21","nodeType":"VariableDeclaration","scope":42424,"src":"13095:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":42420,"name":"address","nodeType":"ElementaryTypeName","src":"13095:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13078:36:21"},"returnParameters":{"id":42423,"nodeType":"ParameterList","parameters":[],"src":"13123:0:21"},"scope":42561,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":42434,"nodeType":"FunctionDefinition","src":"13332:121:21","nodes":[],"documentation":{"id":42425,"nodeType":"StructuredDocumentation","src":"13130:197:21","text":"@notice Registers a recipient and emits {Registered} event if successful and may be handled differently by each strategy.\n @param _poolId The ID of the pool to register the recipient for"},"functionSelector":"075c0e9c","implemented":false,"kind":"function","modifiers":[],"name":"registerRecipient","nameLocation":"13341:17:21","parameters":{"id":42430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42427,"mutability":"mutable","name":"_poolId","nameLocation":"13376:7:21","nodeType":"VariableDeclaration","scope":42434,"src":"13368:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42426,"name":"uint256","nodeType":"ElementaryTypeName","src":"13368:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":42429,"mutability":"mutable","name":"_data","nameLocation":"13406:5:21","nodeType":"VariableDeclaration","scope":42434,"src":"13393:18:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":42428,"name":"bytes","nodeType":"ElementaryTypeName","src":"13393:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13358:59:21"},"returnParameters":{"id":42433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":42434,"src":"13444:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":42431,"name":"address","nodeType":"ElementaryTypeName","src":"13444:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13443:9:21"},"scope":42561,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":42447,"nodeType":"FunctionDefinition","src":"13679:139:21","nodes":[],"documentation":{"id":42435,"nodeType":"StructuredDocumentation","src":"13459:215:21","text":"@notice Registers a batch of recipients.\n @param _poolIds The pool ID's to register the recipients for\n @param _data The data to pass to the strategy and may be handled differently by each strategy"},"functionSelector":"1a20bd88","implemented":false,"kind":"function","modifiers":[],"name":"batchRegisterRecipient","nameLocation":"13688:22:21","parameters":{"id":42442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42438,"mutability":"mutable","name":"_poolIds","nameLocation":"13737:8:21","nodeType":"VariableDeclaration","scope":42447,"src":"13720:25:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":42436,"name":"uint256","nodeType":"ElementaryTypeName","src":"13720:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":42437,"nodeType":"ArrayTypeName","src":"13720:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":42441,"mutability":"mutable","name":"_data","nameLocation":"13770:5:21","nodeType":"VariableDeclaration","scope":42447,"src":"13755:20:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":42439,"name":"bytes","nodeType":"ElementaryTypeName","src":"13755:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":42440,"nodeType":"ArrayTypeName","src":"13755:7:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"13710:71:21"},"returnParameters":{"id":42446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":42447,"src":"13800:16:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":42443,"name":"address","nodeType":"ElementaryTypeName","src":"13800:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":42444,"nodeType":"ArrayTypeName","src":"13800:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"13799:18:21"},"scope":42561,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":42455,"nodeType":"FunctionDefinition","src":"14129:69:21","nodes":[],"documentation":{"id":42448,"nodeType":"StructuredDocumentation","src":"13824:300:21","text":"@notice Funds a pool.\n @dev 'msg.value' must be greater than 0 if the token is the native token\n       or '_amount' must be greater than 0 if the token is not the native token.\n @param _poolId The ID of the pool to fund\n @param _amount The amount to fund the pool with"},"functionSelector":"5acd6fac","implemented":false,"kind":"function","modifiers":[],"name":"fundPool","nameLocation":"14138:8:21","parameters":{"id":42453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42450,"mutability":"mutable","name":"_poolId","nameLocation":"14155:7:21","nodeType":"VariableDeclaration","scope":42455,"src":"14147:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42449,"name":"uint256","nodeType":"ElementaryTypeName","src":"14147:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":42452,"mutability":"mutable","name":"_amount","nameLocation":"14172:7:21","nodeType":"VariableDeclaration","scope":42455,"src":"14164:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42451,"name":"uint256","nodeType":"ElementaryTypeName","src":"14164:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14146:34:21"},"returnParameters":{"id":42454,"nodeType":"ParameterList","parameters":[],"src":"14197:0:21"},"scope":42561,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":42463,"nodeType":"FunctionDefinition","src":"14496:72:21","nodes":[],"documentation":{"id":42456,"nodeType":"StructuredDocumentation","src":"14204:287:21","text":"@notice Allocates funds to a recipient.\n @dev Each strategy will handle the allocation of funds differently.\n @param _poolId The ID of the pool to allocate funds from\n @param _data The data to pass to the strategy and may be handled differently by each strategy."},"functionSelector":"2ec38188","implemented":false,"kind":"function","modifiers":[],"name":"allocate","nameLocation":"14505:8:21","parameters":{"id":42461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42458,"mutability":"mutable","name":"_poolId","nameLocation":"14522:7:21","nodeType":"VariableDeclaration","scope":42463,"src":"14514:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42457,"name":"uint256","nodeType":"ElementaryTypeName","src":"14514:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":42460,"mutability":"mutable","name":"_data","nameLocation":"14544:5:21","nodeType":"VariableDeclaration","scope":42463,"src":"14531:18:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":42459,"name":"bytes","nodeType":"ElementaryTypeName","src":"14531:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14513:37:21"},"returnParameters":{"id":42462,"nodeType":"ParameterList","parameters":[],"src":"14567:0:21"},"scope":42561,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":42473,"nodeType":"FunctionDefinition","src":"14705:106:21","nodes":[],"documentation":{"id":42464,"nodeType":"StructuredDocumentation","src":"14574:126:21","text":"@notice Allocates funds to multiple recipients.\n @dev Each strategy will handle the allocation of funds differently"},"functionSelector":"c6dff1cf","implemented":false,"kind":"function","modifiers":[],"name":"batchAllocate","nameLocation":"14714:13:21","parameters":{"id":42471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42467,"mutability":"mutable","name":"_poolIds","nameLocation":"14756:8:21","nodeType":"VariableDeclaration","scope":42473,"src":"14737:27:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":42465,"name":"uint256","nodeType":"ElementaryTypeName","src":"14737:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":42466,"nodeType":"ArrayTypeName","src":"14737:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":42470,"mutability":"mutable","name":"_datas","nameLocation":"14789:6:21","nodeType":"VariableDeclaration","scope":42473,"src":"14774:21:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":42468,"name":"bytes","nodeType":"ElementaryTypeName","src":"14774:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":42469,"nodeType":"ArrayTypeName","src":"14774:7:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"14727:74:21"},"returnParameters":{"id":42472,"nodeType":"ParameterList","parameters":[],"src":"14810:0:21"},"scope":42561,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":42484,"nodeType":"FunctionDefinition","src":"15213:128:21","nodes":[],"documentation":{"id":42474,"nodeType":"StructuredDocumentation","src":"14817:391:21","text":"@notice Distributes funds to recipients and emits {Distributed} event if successful\n @dev Each strategy will handle the distribution of funds differently\n @param _poolId The ID of the pool to distribute from\n @param _recipientIds The recipient ids to distribute to\n @param _data The data to pass to the strategy and may be handled differently by each strategy"},"functionSelector":"3a5fbd92","implemented":false,"kind":"function","modifiers":[],"name":"distribute","nameLocation":"15222:10:21","parameters":{"id":42482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42476,"mutability":"mutable","name":"_poolId","nameLocation":"15250:7:21","nodeType":"VariableDeclaration","scope":42484,"src":"15242:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42475,"name":"uint256","nodeType":"ElementaryTypeName","src":"15242:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":42479,"mutability":"mutable","name":"_recipientIds","nameLocation":"15284:13:21","nodeType":"VariableDeclaration","scope":42484,"src":"15267:30:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":42477,"name":"address","nodeType":"ElementaryTypeName","src":"15267:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":42478,"nodeType":"ArrayTypeName","src":"15267:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":42481,"mutability":"mutable","name":"_data","nameLocation":"15320:5:21","nodeType":"VariableDeclaration","scope":42484,"src":"15307:18:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":42480,"name":"bytes","nodeType":"ElementaryTypeName","src":"15307:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15232:99:21"},"returnParameters":{"id":42483,"nodeType":"ParameterList","parameters":[],"src":"15340:0:21"},"scope":42561,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":42494,"nodeType":"FunctionDefinition","src":"15676:107:21","nodes":[],"documentation":{"id":42485,"nodeType":"StructuredDocumentation","src":"15450:221:21","text":"@notice Checks if an address is a pool admin.\n @param _poolId The ID of the pool to check\n @param _address The address to check\n @return 'true' if the '_address' is a pool admin, otherwise 'false'"},"functionSelector":"ab3febc6","implemented":false,"kind":"function","modifiers":[],"name":"isPoolAdmin","nameLocation":"15685:11:21","parameters":{"id":42490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42487,"mutability":"mutable","name":"_poolId","nameLocation":"15714:7:21","nodeType":"VariableDeclaration","scope":42494,"src":"15706:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42486,"name":"uint256","nodeType":"ElementaryTypeName","src":"15706:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":42489,"mutability":"mutable","name":"_address","nameLocation":"15739:8:21","nodeType":"VariableDeclaration","scope":42494,"src":"15731:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":42488,"name":"address","nodeType":"ElementaryTypeName","src":"15731:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15696:57:21"},"returnParameters":{"id":42493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":42494,"src":"15777:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":42491,"name":"bool","nodeType":"ElementaryTypeName","src":"15777:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15776:6:21"},"scope":42561,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":42504,"nodeType":"FunctionDefinition","src":"16019:109:21","nodes":[],"documentation":{"id":42495,"nodeType":"StructuredDocumentation","src":"15789:225:21","text":"@notice Checks if an address is a pool manager.\n @param _poolId The ID of the pool to check\n @param _address The address to check\n @return 'true' if the '_address' is a pool manager, otherwise 'false'"},"functionSelector":"29e40d4b","implemented":false,"kind":"function","modifiers":[],"name":"isPoolManager","nameLocation":"16028:13:21","parameters":{"id":42500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42497,"mutability":"mutable","name":"_poolId","nameLocation":"16059:7:21","nodeType":"VariableDeclaration","scope":42504,"src":"16051:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42496,"name":"uint256","nodeType":"ElementaryTypeName","src":"16051:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":42499,"mutability":"mutable","name":"_address","nameLocation":"16084:8:21","nodeType":"VariableDeclaration","scope":42504,"src":"16076:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":42498,"name":"address","nodeType":"ElementaryTypeName","src":"16076:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16041:57:21"},"returnParameters":{"id":42503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42502,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":42504,"src":"16122:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":42501,"name":"bool","nodeType":"ElementaryTypeName","src":"16122:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16121:6:21"},"scope":42561,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":42512,"nodeType":"FunctionDefinition","src":"16361:91:21","nodes":[],"documentation":{"id":42505,"nodeType":"StructuredDocumentation","src":"16134:222:21","text":"@notice Checks if a strategy is cloneable (is in the cloneableStrategies mapping).\n @param _strategy The address of the strategy to check\n @return 'true' if the '_strategy' is cloneable, otherwise 'false'"},"functionSelector":"ab2ec589","implemented":false,"kind":"function","modifiers":[],"name":"isCloneableStrategy","nameLocation":"16370:19:21","parameters":{"id":42508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42507,"mutability":"mutable","name":"_strategy","nameLocation":"16407:9:21","nodeType":"VariableDeclaration","scope":42512,"src":"16399:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":42506,"name":"address","nodeType":"ElementaryTypeName","src":"16399:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16389:33:21"},"returnParameters":{"id":42511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42510,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":42512,"src":"16446:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":42509,"name":"bool","nodeType":"ElementaryTypeName","src":"16446:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16445:6:21"},"scope":42561,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":42520,"nodeType":"FunctionDefinition","src":"16668:70:21","nodes":[],"documentation":{"id":42513,"nodeType":"StructuredDocumentation","src":"16458:205:21","text":"@notice Returns the address of the strategy for a given 'poolId'\n @param _poolId The ID of the pool to check\n @return strategy The address of the strategy for the ID of the pool passed in"},"functionSelector":"cfc0cc34","implemented":false,"kind":"function","modifiers":[],"name":"getStrategy","nameLocation":"16677:11:21","parameters":{"id":42516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42515,"mutability":"mutable","name":"_poolId","nameLocation":"16697:7:21","nodeType":"VariableDeclaration","scope":42520,"src":"16689:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42514,"name":"uint256","nodeType":"ElementaryTypeName","src":"16689:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16688:17:21"},"returnParameters":{"id":42519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":42520,"src":"16729:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":42517,"name":"address","nodeType":"ElementaryTypeName","src":"16729:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16728:9:21"},"scope":42561,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":42526,"nodeType":"FunctionDefinition","src":"16854:57:21","nodes":[],"documentation":{"id":42521,"nodeType":"StructuredDocumentation","src":"16744:105:21","text":"@notice Returns the current percent fee\n @return percentFee The current percentage for the fee"},"functionSelector":"4edbaadc","implemented":false,"kind":"function","modifiers":[],"name":"getPercentFee","nameLocation":"16863:13:21","parameters":{"id":42522,"nodeType":"ParameterList","parameters":[],"src":"16876:2:21"},"returnParameters":{"id":42525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":42526,"src":"16902:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42523,"name":"uint256","nodeType":"ElementaryTypeName","src":"16902:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16901:9:21"},"scope":42561,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":42532,"nodeType":"FunctionDefinition","src":"17007:54:21","nodes":[],"documentation":{"id":42527,"nodeType":"StructuredDocumentation","src":"16917:85:21","text":"@notice Returns the current base fee\n @return baseFee The current base fee"},"functionSelector":"15e812ad","implemented":false,"kind":"function","modifiers":[],"name":"getBaseFee","nameLocation":"17016:10:21","parameters":{"id":42528,"nodeType":"ParameterList","parameters":[],"src":"17026:2:21"},"returnParameters":{"id":42531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":42532,"src":"17052:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42529,"name":"uint256","nodeType":"ElementaryTypeName","src":"17052:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17051:9:21"},"scope":42561,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":42538,"nodeType":"FunctionDefinition","src":"17174:63:21","nodes":[],"documentation":{"id":42533,"nodeType":"StructuredDocumentation","src":"17067:102:21","text":"@notice Returns the current treasury address\n @return treasury The current treasury address"},"functionSelector":"3b19e84a","implemented":false,"kind":"function","modifiers":[],"name":"getTreasury","nameLocation":"17183:11:21","parameters":{"id":42534,"nodeType":"ParameterList","parameters":[],"src":"17194:2:21"},"returnParameters":{"id":42537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":42538,"src":"17220:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":42535,"name":"address","nodeType":"ElementaryTypeName","src":"17220:15:21","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"17219:17:21"},"scope":42561,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":42545,"nodeType":"FunctionDefinition","src":"17350:57:21","nodes":[],"documentation":{"id":42539,"nodeType":"StructuredDocumentation","src":"17243:102:21","text":"@notice Returns the current registry address\n @return registry The current registry address"},"functionSelector":"5ab1bd53","implemented":false,"kind":"function","modifiers":[],"name":"getRegistry","nameLocation":"17359:11:21","parameters":{"id":42540,"nodeType":"ParameterList","parameters":[],"src":"17370:2:21"},"returnParameters":{"id":42544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":42545,"src":"17396:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IRegistry_$42753","typeString":"contract IRegistry"},"typeName":{"id":42542,"nodeType":"UserDefinedTypeName","pathNode":{"id":42541,"name":"IRegistry","nameLocations":["17396:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":42753,"src":"17396:9:21"},"referencedDeclaration":42753,"src":"17396:9:21","typeDescriptions":{"typeIdentifier":"t_contract$_IRegistry_$42753","typeString":"contract IRegistry"}},"visibility":"internal"}],"src":"17395:11:21"},"scope":42561,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":42554,"nodeType":"FunctionDefinition","src":"17599:70:21","nodes":[],"documentation":{"id":42546,"nodeType":"StructuredDocumentation","src":"17413:181:21","text":"@notice Returns the 'Pool' struct for a given 'poolId'\n @param _poolId The ID of the pool to check\n @return pool The 'Pool' struct for the ID of the pool passed in"},"functionSelector":"068bcd8d","implemented":false,"kind":"function","modifiers":[],"name":"getPool","nameLocation":"17608:7:21","parameters":{"id":42549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42548,"mutability":"mutable","name":"_poolId","nameLocation":"17624:7:21","nodeType":"VariableDeclaration","scope":42554,"src":"17616:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42547,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17615:17:21"},"returnParameters":{"id":42553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42552,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":42554,"src":"17656:11:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$42226_memory_ptr","typeString":"struct IAllo.Pool"},"typeName":{"id":42551,"nodeType":"UserDefinedTypeName","pathNode":{"id":42550,"name":"Pool","nameLocations":["17656:4:21"],"nodeType":"IdentifierPath","referencedDeclaration":42226,"src":"17656:4:21"},"referencedDeclaration":42226,"src":"17656:4:21","typeDescriptions":{"typeIdentifier":"t_struct$_Pool_$42226_storage_ptr","typeString":"struct IAllo.Pool"}},"visibility":"internal"}],"src":"17655:13:21"},"scope":42561,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":42560,"nodeType":"FunctionDefinition","src":"17820:61:21","nodes":[],"documentation":{"id":42555,"nodeType":"StructuredDocumentation","src":"17675:140:21","text":"@notice Returns the current fee denominator\n @dev 1e18 represents 100%\n @return feeDenominator The current fee denominator"},"functionSelector":"f4e1fc41","implemented":false,"kind":"function","modifiers":[],"name":"getFeeDenominator","nameLocation":"17829:17:21","parameters":{"id":42556,"nodeType":"ParameterList","parameters":[],"src":"17846:2:21"},"returnParameters":{"id":42559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42558,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":42560,"src":"17872:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42557,"name":"uint256","nodeType":"ElementaryTypeName","src":"17872:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17871:9:21"},"scope":42561,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IAllo","contractDependencies":[],"contractKind":"interface","documentation":{"id":42211,"nodeType":"StructuredDocumentation","src":"4234:297:21","text":"@title Allo Interface\n @author @thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\n @notice Interface for the Allo contract. It exposes all functions needed to use the Allo protocol."},"fullyImplemented":false,"linearizedBaseContracts":[42561],"name":"IAllo","nameLocation":"4541:5:21","scope":42562,"usedErrors":[]}],"license":"AGPL-3.0-only"},"id":21}