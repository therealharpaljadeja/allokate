{"abi":[{"type":"function","name":"NATIVE","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"allocate","inputs":[{"name":"_data","type":"bytes","internalType":"bytes"},{"name":"_sender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"distribute","inputs":[{"name":"_recipientIds","type":"address[]","internalType":"address[]"},{"name":"_data","type":"bytes","internalType":"bytes"},{"name":"_sender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getAllo","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IAllo"}],"stateMutability":"view"},{"type":"function","name":"getPayouts","inputs":[{"name":"_recipientIds","type":"address[]","internalType":"address[]"},{"name":"_data","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"","type":"tuple[]","internalType":"struct IStrategy.PayoutSummary[]","components":[{"name":"recipientAddress","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getPoolAmount","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getPoolId","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getRecipientStatus","inputs":[{"name":"_recipientId","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint8","internalType":"enum IStrategy.Status"}],"stateMutability":"view"},{"type":"function","name":"getStrategyId","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"increasePoolAmount","inputs":[{"name":"_amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"initialize","inputs":[{"name":"_poolId","type":"uint256","internalType":"uint256"},{"name":"_data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"isPoolActive","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isValidAllocator","inputs":[{"name":"_allocator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"registerRecipient","inputs":[{"name":"_data","type":"bytes","internalType":"bytes"},{"name":"_sender","type":"address","internalType":"address"}],"outputs":[{"name":"recipientId","type":"address","internalType":"address"}],"stateMutability":"payable"},{"type":"event","name":"Allocated","inputs":[{"name":"recipientId","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"token","type":"address","indexed":false,"internalType":"address"},{"name":"sender","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Distributed","inputs":[{"name":"recipientId","type":"address","indexed":true,"internalType":"address"},{"name":"recipientAddress","type":"address","indexed":false,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"sender","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Initialized","inputs":[{"name":"poolId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"data","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"event","name":"PoolActive","inputs":[{"name":"active","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"Registered","inputs":[{"name":"recipientId","type":"address","indexed":true,"internalType":"address"},{"name":"data","type":"bytes","indexed":false,"internalType":"bytes"},{"name":"sender","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"error","name":"ALLOCATION_ACTIVE","inputs":[]},{"type":"error","name":"ALLOCATION_NOT_ACTIVE","inputs":[]},{"type":"error","name":"ALLOCATION_NOT_ENDED","inputs":[]},{"type":"error","name":"ALREADY_INITIALIZED","inputs":[]},{"type":"error","name":"AMOUNT_MISMATCH","inputs":[]},{"type":"error","name":"ANCHOR_ERROR","inputs":[]},{"type":"error","name":"ARRAY_MISMATCH","inputs":[]},{"type":"error","name":"INVALID","inputs":[]},{"type":"error","name":"INVALID_ADDRESS","inputs":[]},{"type":"error","name":"INVALID_FEE","inputs":[]},{"type":"error","name":"INVALID_METADATA","inputs":[]},{"type":"error","name":"INVALID_REGISTRATION","inputs":[]},{"type":"error","name":"IS_APPROVED_STRATEGY","inputs":[]},{"type":"error","name":"MISMATCH","inputs":[]},{"type":"error","name":"NONCE_NOT_AVAILABLE","inputs":[]},{"type":"error","name":"NOT_APPROVED_STRATEGY","inputs":[]},{"type":"error","name":"NOT_ENOUGH_FUNDS","inputs":[]},{"type":"error","name":"NOT_IMPLEMENTED","inputs":[]},{"type":"error","name":"NOT_INITIALIZED","inputs":[]},{"type":"error","name":"NOT_PENDING_OWNER","inputs":[]},{"type":"error","name":"POOL_ACTIVE","inputs":[]},{"type":"error","name":"POOL_INACTIVE","inputs":[]},{"type":"error","name":"RECIPIENT_ALREADY_ACCEPTED","inputs":[]},{"type":"error","name":"RECIPIENT_ERROR","inputs":[{"name":"recipientId","type":"address","internalType":"address"}]},{"type":"error","name":"RECIPIENT_NOT_ACCEPTED","inputs":[]},{"type":"error","name":"REGISTRATION_ACTIVE","inputs":[]},{"type":"error","name":"REGISTRATION_NOT_ACTIVE","inputs":[]},{"type":"error","name":"UNAUTHORIZED","inputs":[]},{"type":"error","name":"ZERO_ADDRESS","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"NATIVE()":"a0cf0aea","allocate(bytes,address)":"ef2920fc","distribute(address[],bytes,address)":"0a6f0ee9","getAllo()":"15cc481e","getPayouts(address[],bytes[])":"b2b878d0","getPoolAmount()":"4ab4ba42","getPoolId()":"38fff2d0","getRecipientStatus(address)":"eb11af93","getStrategyId()":"42fda9c7","increasePoolAmount(uint256)":"f5b0dfb7","initialize(uint256,bytes)":"edd146cc","isPoolActive()":"df868ed3","isValidAllocator(address)":"4d31d087","registerRecipient(bytes,address)":"2bbe0cae"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ALLOCATION_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ALLOCATION_NOT_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ALLOCATION_NOT_ENDED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ALREADY_INITIALIZED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AMOUNT_MISMATCH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ANCHOR_ERROR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ARRAY_MISMATCH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_FEE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_METADATA\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_REGISTRATION\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IS_APPROVED_STRATEGY\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MISMATCH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NONCE_NOT_AVAILABLE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_APPROVED_STRATEGY\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_ENOUGH_FUNDS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_IMPLEMENTED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_INITIALIZED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_PENDING_OWNER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"POOL_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"POOL_INACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RECIPIENT_ALREADY_ACCEPTED\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"}],\"name\":\"RECIPIENT_ERROR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RECIPIENT_NOT_ACCEPTED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"REGISTRATION_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"REGISTRATION_NOT_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UNAUTHORIZED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZERO_ADDRESS\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Allocated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipientAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Distributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"PoolActive\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Registered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NATIVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"allocate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_recipientIds\",\"type\":\"address[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllo\",\"outputs\":[{\"internalType\":\"contract IAllo\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_recipientIds\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"_data\",\"type\":\"bytes[]\"}],\"name\":\"getPayouts\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipientAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IStrategy.PayoutSummary[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipientId\",\"type\":\"address\"}],\"name\":\"getRecipientStatus\",\"outputs\":[{\"internalType\":\"enum IStrategy.Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStrategyId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"increasePoolAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPoolActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_allocator\",\"type\":\"address\"}],\"name\":\"isValidAllocator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"registerRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"@thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\",\"details\":\"This contract is implemented by all strategies.\",\"errors\":{\"ANCHOR_ERROR()\":[{\"details\":\"Thrown if the anchor creation fails\"}],\"NONCE_NOT_AVAILABLE()\":[{\"details\":\"Thrown when the nonce passed has been used or not available\"}],\"NOT_PENDING_OWNER()\":[{\"details\":\"Thrown when the 'msg.sender' is not the pending owner on ownership transfer\"}]},\"events\":{\"Allocated(address,uint256,address,address)\":{\"params\":{\"amount\":\"The amount allocated\",\"recipientId\":\"The ID of the recipient\",\"token\":\"The token allocated\"}},\"Distributed(address,address,uint256,address)\":{\"params\":{\"amount\":\"The amount distributed\",\"recipientAddress\":\"The recipient\",\"recipientId\":\"The ID of the recipient\",\"sender\":\"The sender\"}},\"Initialized(uint256,bytes)\":{\"params\":{\"data\":\"The data passed to the 'initialize' function\",\"poolId\":\"The ID of the pool\"}},\"PoolActive(bool)\":{\"params\":{\"active\":\"The status of the pool\"}},\"Registered(address,bytes,address)\":{\"params\":{\"data\":\"The data passed to the 'registerRecipient' function\",\"recipientId\":\"The ID of the recipient\",\"sender\":\"The sender\"}}},\"kind\":\"dev\",\"methods\":{\"allocate(bytes,address)\":{\"details\":\"The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.\",\"params\":{\"_data\":\"The data to use to allocate to the recipient\",\"_sender\":\"The address of the sender\"}},\"constructor\":{\"params\":{\"_allo\":\"Address of the Allo contract.\",\"_name\":\"Name of the strategy\"}},\"distribute(address[],bytes,address)\":{\"details\":\"The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.\",\"params\":{\"_data\":\"The data to use to distribute to the recipients\",\"_recipientIds\":\"The IDs of the recipients\",\"_sender\":\"The address of the sender\"}},\"getAllo()\":{\"returns\":{\"_0\":\"The Allo contract\"}},\"getPayouts(address[],bytes[])\":{\"details\":\"The encoded '_data' will be determined by the strategy implementation.\",\"params\":{\"_data\":\"The data to use to get the payout summary for the recipients\",\"_recipientIds\":\"The IDs of the recipients\"},\"returns\":{\"_0\":\"The payout summary for the recipients\"}},\"getPoolAmount()\":{\"returns\":{\"_0\":\"The balance of the pool\"}},\"getPoolId()\":{\"returns\":{\"_0\":\"The ID of the pool\"}},\"getRecipientStatus(address)\":{\"params\":{\"_recipientId\":\"The ID of the recipient\"},\"returns\":{\"_0\":\"The status of the recipient\"}},\"getStrategyId()\":{\"returns\":{\"_0\":\"The ID of the strategy\"}},\"increasePoolAmount(uint256)\":{\"details\":\"Increases the 'poolAmount' by '_amount'. Only 'Allo' contract can call this.\",\"params\":{\"_amount\":\"The amount to increase the pool by\"}},\"initialize(uint256,bytes)\":{\"params\":{\"_data\":\"The encoded data\",\"_poolId\":\"The ID of the pool\"}},\"isPoolActive()\":{\"returns\":{\"_0\":\"'true' if the pool is active, otherwise 'false'\"}},\"isValidAllocator(address)\":{\"details\":\"How the allocator is determined is up to the strategy implementation.\",\"params\":{\"_allocator\":\"The address to check if it is a valid allocator for the strategy.\"},\"returns\":{\"_0\":\"'true' if the address is a valid allocator, 'false' otherwise\"}},\"registerRecipient(bytes,address)\":{\"details\":\"Registers a recipient and returns the ID of the recipient. The encoded '_data' will be determined by the      strategy implementation. Only 'Allo' contract can call this when it is initialized.\",\"params\":{\"_data\":\"The data to use to register the recipient\",\"_sender\":\"The address of the sender\"},\"returns\":{\"recipientId\":\"The recipientId\"}}},\"title\":\"BaseStrategy Contract\",\"version\":1},\"userdoc\":{\"errors\":{\"ALLOCATION_ACTIVE()\":[{\"notice\":\"Thrown when the allocation is active.\"}],\"ALLOCATION_NOT_ACTIVE()\":[{\"notice\":\"Thrown when the allocation is not active.\"}],\"ALLOCATION_NOT_ENDED()\":[{\"notice\":\"Thrown when the allocation is not ended.\"}],\"ALREADY_INITIALIZED()\":[{\"notice\":\"Thrown when data is already intialized\"}],\"AMOUNT_MISMATCH()\":[{\"notice\":\"Thrown when the amount of tokens sent does not match the amount of tokens expected\"}],\"ARRAY_MISMATCH()\":[{\"notice\":\"Thrown when two arrays length are not equal\"}],\"INVALID()\":[{\"notice\":\"Thrown as a general error when input / data is invalid\"}],\"INVALID_ADDRESS()\":[{\"notice\":\"Thrown when an invalid address is used\"}],\"INVALID_FEE()\":[{\"notice\":\"Thrown when the fee is below 1e18 which is the fee percentage denominator\"}],\"INVALID_METADATA()\":[{\"notice\":\"Thrown when the metadata is invalid.\"}],\"INVALID_REGISTRATION()\":[{\"notice\":\"Thrown when the registration is invalid.\"}],\"IS_APPROVED_STRATEGY()\":[{\"notice\":\"Thrown when the strategy is approved and should be cloned\"}],\"MISMATCH()\":[{\"notice\":\"Thrown when mismatch in decoding data\"}],\"NOT_APPROVED_STRATEGY()\":[{\"notice\":\"Thrown when the strategy is not approved\"}],\"NOT_ENOUGH_FUNDS()\":[{\"notice\":\"Thrown when not enough funds are available\"}],\"NOT_IMPLEMENTED()\":[{\"notice\":\"Thrown when the function is not implemented\"}],\"NOT_INITIALIZED()\":[{\"notice\":\"Thrown when data is yet to be initialized\"}],\"POOL_ACTIVE()\":[{\"notice\":\"Thrown when a pool is already active\"}],\"POOL_INACTIVE()\":[{\"notice\":\"Thrown when a pool is inactive\"}],\"RECIPIENT_ALREADY_ACCEPTED()\":[{\"notice\":\"Thrown when recipient is already accepted.\"}],\"RECIPIENT_ERROR(address)\":[{\"notice\":\"Thrown when there is an error in recipient.\"}],\"RECIPIENT_NOT_ACCEPTED()\":[{\"notice\":\"Thrown when the recipient is not accepted.\"}],\"REGISTRATION_ACTIVE()\":[{\"notice\":\"Thrown when registration is active.\"}],\"REGISTRATION_NOT_ACTIVE()\":[{\"notice\":\"Thrown when registration is not active.\"}],\"UNAUTHORIZED()\":[{\"notice\":\"Thrown when user is not authorized\"}],\"ZERO_ADDRESS()\":[{\"notice\":\"Thrown when address is the zero address\"}]},\"events\":{\"Allocated(address,uint256,address,address)\":{\"notice\":\"Emitted when a recipient is allocated to.\"},\"Distributed(address,address,uint256,address)\":{\"notice\":\"Emitted when tokens are distributed.\"},\"Initialized(uint256,bytes)\":{\"notice\":\"Emitted when strategy is initialized.\"},\"PoolActive(bool)\":{\"notice\":\"Emitted when pool is set to active status.\"},\"Registered(address,bytes,address)\":{\"notice\":\"Emitted when a recipient is registered.\"}},\"kind\":\"user\",\"methods\":{\"NATIVE()\":{\"notice\":\"Address of the native token\"},\"allocate(bytes,address)\":{\"notice\":\"Allocates to a recipient.\"},\"constructor\":{\"notice\":\"Constructor to set the Allo contract and \\\"strategyId'.\"},\"distribute(address[],bytes,address)\":{\"notice\":\"Distributes funds (tokens) to recipients.\"},\"getAllo()\":{\"notice\":\"Getter for the 'Allo' contract.\"},\"getPayouts(address[],bytes[])\":{\"notice\":\"Gets the payout summary for recipients.\"},\"getPoolAmount()\":{\"notice\":\"Getter for the 'poolAmount'.\"},\"getPoolId()\":{\"notice\":\"Getter for the 'poolId'.\"},\"getRecipientStatus(address)\":{\"notice\":\"Getter for the status of a recipient.\"},\"getStrategyId()\":{\"notice\":\"Getter for the 'strategyId'.\"},\"increasePoolAmount(uint256)\":{\"notice\":\"Increases the pool amount.\"},\"initialize(uint256,bytes)\":{\"notice\":\"@dev The default BaseStrategy version will not use the data  if a strategy wants to use it, they will overwrite it,      use it, and then call super.initialize().\"},\"isPoolActive()\":{\"notice\":\"Getter for whether or not the pool is active.\"},\"isValidAllocator(address)\":{\"notice\":\"Checks if the '_allocator' is a valid allocator.\"},\"registerRecipient(bytes,address)\":{\"notice\":\"Registers a recipient.\"}},\"notice\":\"This contract is the base contract for all strategies\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/strategies/BaseStrategy.sol\":\"BaseStrategy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solady/=lib/solady/src/\"]},\"sources\":{\"lib/solady/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0xf98506fade18a92e3d8d0a0ca0bdaeaa099d7620aac2a9d76b5f3d0bcd10691c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3495c9d108bc69951a12c5ce9f05851cc921f0bb69e2505756e79f3ddab4e1a\",\"dweb:/ipfs/QmT3XwbmdbQCxw7iNcF7DoiypDd5vs2ETFWirXqmJ86Meg\"]},\"src/core/interfaces/IAllo.sol\":{\"keccak256\":\"0xd3ea236154c6a35dfa5699f226283b92f20be90151c89726b64c3e301994dd80\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://6b858848260585dbccbbb08c9dfc5e744cb92ed4c73a9a6e9fb7bf66c975fbea\",\"dweb:/ipfs/QmQCn1AQyyfEEHk616Mhye7zswyvtgqChYCPzKt9gKF6pj\"]},\"src/core/interfaces/IRegistry.sol\":{\"keccak256\":\"0x84702fb3f5f7f6a6a93165f60d96e4ca879050aeb3004e389d52dac0cc6c2f79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://635148af139b9bd5a18843c76d5aef3892038330e4cf8d23a327bea94f4d9715\",\"dweb:/ipfs/QmcxNUKJPYTCLKxMPduRFMdwhHE1hhghWK72HF8krEsADv\"]},\"src/core/interfaces/IStrategy.sol\":{\"keccak256\":\"0x20607334ca94739d9c3d9da71f6b8f5bff55bbf171553cfb523be7d26e324ae5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://908d01620cb3674371fc8f3043f00407e4d98ce66c2e63c4e3254889af0644cf\",\"dweb:/ipfs/QmWHxVEHc1Cwt9WDxrukSW6XW9M7Whky6iTVQK97X4E3eD\"]},\"src/core/libraries/Errors.sol\":{\"keccak256\":\"0xab23c9c86be175f309dd8ac603d2ca07be961c8f5fee25174380499cf3c1caaa\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://6092fe8abc662dffda624bfcfddafe385db240d1fc33304ca91fa2c2203eaf66\",\"dweb:/ipfs/QmT2c6W5AQpnjDXAwN7XLKGWbUxYjsagnysrtMPJaDWKyY\"]},\"src/core/libraries/Metadata.sol\":{\"keccak256\":\"0x452a95a8762fafd51d36295138f7e14189cbaaca7274d6fd34a59ad57a442d44\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2cc5507da2550ab9bfa0fbb263e703f9e70b831190bb7b2bcdbb231cab49795c\",\"dweb:/ipfs/QmQXCD8v2HppXAX17aH49JvNyyfDYzGMrg63QNabUEXPpn\"]},\"src/core/libraries/Native.sol\":{\"keccak256\":\"0x23dacace24a8c570a659dcc7e52fca2d39cc7577c6cfa674820cafaf194b29d5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0727880a600b1803f02b58ad002938462dc61aacf841f5e1ee38f296fdd67e8a\",\"dweb:/ipfs/QmdrEiJxFFnUfn2QUNxRAUMS1qwCnRtGeWPChaGzhAkRnv\"]},\"src/core/libraries/Transfer.sol\":{\"keccak256\":\"0x832c4d87d848167785e914d0bf11c988468ca740fb2efab85e83c45a089f2810\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://d3ab11790a586cc5c678be5a8e1e1b210ea3fe44be3578e54f99e3c51a8ce7d8\",\"dweb:/ipfs/QmefGpGm8YFLCBixqKJ7WyVWyMn8Wp2xdFg3MjfRVeAWJ9\"]},\"src/strategies/BaseStrategy.sol\":{\"keccak256\":\"0xd07f26dde6008e2d43d866e162aea8ee9b87d957dc6fa28879ac836b01850a6b\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5e9c014516c23560b8956d721f19644e70bad9d10c0ce07f77b49aa3043a82f3\",\"dweb:/ipfs/QmUAGewUKV3wkrMHuQWWwhQ3Ye2tot33yEY4syF869LwYs\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"ALLOCATION_ACTIVE"},{"inputs":[],"type":"error","name":"ALLOCATION_NOT_ACTIVE"},{"inputs":[],"type":"error","name":"ALLOCATION_NOT_ENDED"},{"inputs":[],"type":"error","name":"ALREADY_INITIALIZED"},{"inputs":[],"type":"error","name":"AMOUNT_MISMATCH"},{"inputs":[],"type":"error","name":"ANCHOR_ERROR"},{"inputs":[],"type":"error","name":"ARRAY_MISMATCH"},{"inputs":[],"type":"error","name":"INVALID"},{"inputs":[],"type":"error","name":"INVALID_ADDRESS"},{"inputs":[],"type":"error","name":"INVALID_FEE"},{"inputs":[],"type":"error","name":"INVALID_METADATA"},{"inputs":[],"type":"error","name":"INVALID_REGISTRATION"},{"inputs":[],"type":"error","name":"IS_APPROVED_STRATEGY"},{"inputs":[],"type":"error","name":"MISMATCH"},{"inputs":[],"type":"error","name":"NONCE_NOT_AVAILABLE"},{"inputs":[],"type":"error","name":"NOT_APPROVED_STRATEGY"},{"inputs":[],"type":"error","name":"NOT_ENOUGH_FUNDS"},{"inputs":[],"type":"error","name":"NOT_IMPLEMENTED"},{"inputs":[],"type":"error","name":"NOT_INITIALIZED"},{"inputs":[],"type":"error","name":"NOT_PENDING_OWNER"},{"inputs":[],"type":"error","name":"POOL_ACTIVE"},{"inputs":[],"type":"error","name":"POOL_INACTIVE"},{"inputs":[],"type":"error","name":"RECIPIENT_ALREADY_ACCEPTED"},{"inputs":[{"internalType":"address","name":"recipientId","type":"address"}],"type":"error","name":"RECIPIENT_ERROR"},{"inputs":[],"type":"error","name":"RECIPIENT_NOT_ACCEPTED"},{"inputs":[],"type":"error","name":"REGISTRATION_ACTIVE"},{"inputs":[],"type":"error","name":"REGISTRATION_NOT_ACTIVE"},{"inputs":[],"type":"error","name":"UNAUTHORIZED"},{"inputs":[],"type":"error","name":"ZERO_ADDRESS"},{"inputs":[{"internalType":"address","name":"recipientId","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false},{"internalType":"address","name":"token","type":"address","indexed":false},{"internalType":"address","name":"sender","type":"address","indexed":false}],"type":"event","name":"Allocated","anonymous":false},{"inputs":[{"internalType":"address","name":"recipientId","type":"address","indexed":true},{"internalType":"address","name":"recipientAddress","type":"address","indexed":false},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false},{"internalType":"address","name":"sender","type":"address","indexed":false}],"type":"event","name":"Distributed","anonymous":false},{"inputs":[{"internalType":"uint256","name":"poolId","type":"uint256","indexed":false},{"internalType":"bytes","name":"data","type":"bytes","indexed":false}],"type":"event","name":"Initialized","anonymous":false},{"inputs":[{"internalType":"bool","name":"active","type":"bool","indexed":false}],"type":"event","name":"PoolActive","anonymous":false},{"inputs":[{"internalType":"address","name":"recipientId","type":"address","indexed":true},{"internalType":"bytes","name":"data","type":"bytes","indexed":false},{"internalType":"address","name":"sender","type":"address","indexed":false}],"type":"event","name":"Registered","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"NATIVE","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"},{"internalType":"address","name":"_sender","type":"address"}],"stateMutability":"payable","type":"function","name":"allocate"},{"inputs":[{"internalType":"address[]","name":"_recipientIds","type":"address[]"},{"internalType":"bytes","name":"_data","type":"bytes"},{"internalType":"address","name":"_sender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"distribute"},{"inputs":[],"stateMutability":"view","type":"function","name":"getAllo","outputs":[{"internalType":"contract IAllo","name":"","type":"address"}]},{"inputs":[{"internalType":"address[]","name":"_recipientIds","type":"address[]"},{"internalType":"bytes[]","name":"_data","type":"bytes[]"}],"stateMutability":"view","type":"function","name":"getPayouts","outputs":[{"internalType":"struct IStrategy.PayoutSummary[]","name":"","type":"tuple[]","components":[{"internalType":"address","name":"recipientAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getPoolAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getPoolId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"_recipientId","type":"address"}],"stateMutability":"view","type":"function","name":"getRecipientStatus","outputs":[{"internalType":"enum IStrategy.Status","name":"","type":"uint8"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getStrategyId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"increasePoolAmount"},{"inputs":[{"internalType":"uint256","name":"_poolId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"initialize"},{"inputs":[],"stateMutability":"view","type":"function","name":"isPoolActive","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"_allocator","type":"address"}],"stateMutability":"view","type":"function","name":"isValidAllocator","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"},{"internalType":"address","name":"_sender","type":"address"}],"stateMutability":"payable","type":"function","name":"registerRecipient","outputs":[{"internalType":"address","name":"recipientId","type":"address"}]}],"devdoc":{"kind":"dev","methods":{"allocate(bytes,address)":{"details":"The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.","params":{"_data":"The data to use to allocate to the recipient","_sender":"The address of the sender"}},"constructor":{"params":{"_allo":"Address of the Allo contract.","_name":"Name of the strategy"}},"distribute(address[],bytes,address)":{"details":"The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.","params":{"_data":"The data to use to distribute to the recipients","_recipientIds":"The IDs of the recipients","_sender":"The address of the sender"}},"getAllo()":{"returns":{"_0":"The Allo contract"}},"getPayouts(address[],bytes[])":{"details":"The encoded '_data' will be determined by the strategy implementation.","params":{"_data":"The data to use to get the payout summary for the recipients","_recipientIds":"The IDs of the recipients"},"returns":{"_0":"The payout summary for the recipients"}},"getPoolAmount()":{"returns":{"_0":"The balance of the pool"}},"getPoolId()":{"returns":{"_0":"The ID of the pool"}},"getRecipientStatus(address)":{"params":{"_recipientId":"The ID of the recipient"},"returns":{"_0":"The status of the recipient"}},"getStrategyId()":{"returns":{"_0":"The ID of the strategy"}},"increasePoolAmount(uint256)":{"details":"Increases the 'poolAmount' by '_amount'. Only 'Allo' contract can call this.","params":{"_amount":"The amount to increase the pool by"}},"initialize(uint256,bytes)":{"params":{"_data":"The encoded data","_poolId":"The ID of the pool"}},"isPoolActive()":{"returns":{"_0":"'true' if the pool is active, otherwise 'false'"}},"isValidAllocator(address)":{"details":"How the allocator is determined is up to the strategy implementation.","params":{"_allocator":"The address to check if it is a valid allocator for the strategy."},"returns":{"_0":"'true' if the address is a valid allocator, 'false' otherwise"}},"registerRecipient(bytes,address)":{"details":"Registers a recipient and returns the ID of the recipient. The encoded '_data' will be determined by the      strategy implementation. Only 'Allo' contract can call this when it is initialized.","params":{"_data":"The data to use to register the recipient","_sender":"The address of the sender"},"returns":{"recipientId":"The recipientId"}}},"version":1},"userdoc":{"kind":"user","methods":{"NATIVE()":{"notice":"Address of the native token"},"allocate(bytes,address)":{"notice":"Allocates to a recipient."},"constructor":{"notice":"Constructor to set the Allo contract and \"strategyId'."},"distribute(address[],bytes,address)":{"notice":"Distributes funds (tokens) to recipients."},"getAllo()":{"notice":"Getter for the 'Allo' contract."},"getPayouts(address[],bytes[])":{"notice":"Gets the payout summary for recipients."},"getPoolAmount()":{"notice":"Getter for the 'poolAmount'."},"getPoolId()":{"notice":"Getter for the 'poolId'."},"getRecipientStatus(address)":{"notice":"Getter for the status of a recipient."},"getStrategyId()":{"notice":"Getter for the 'strategyId'."},"increasePoolAmount(uint256)":{"notice":"Increases the pool amount."},"initialize(uint256,bytes)":{"notice":"@dev The default BaseStrategy version will not use the data  if a strategy wants to use it, they will overwrite it,      use it, and then call super.initialize()."},"isPoolActive()":{"notice":"Getter for whether or not the pool is active."},"isValidAllocator(address)":{"notice":"Checks if the '_allocator' is a valid allocator."},"registerRecipient(bytes,address)":{"notice":"Registers a recipient."}},"version":1}},"settings":{"remappings":["ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/","solady/=lib/solady/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/strategies/BaseStrategy.sol":"BaseStrategy"},"libraries":{}},"sources":{"lib/solady/src/utils/SafeTransferLib.sol":{"keccak256":"0xf98506fade18a92e3d8d0a0ca0bdaeaa099d7620aac2a9d76b5f3d0bcd10691c","urls":["bzz-raw://a3495c9d108bc69951a12c5ce9f05851cc921f0bb69e2505756e79f3ddab4e1a","dweb:/ipfs/QmT3XwbmdbQCxw7iNcF7DoiypDd5vs2ETFWirXqmJ86Meg"],"license":"MIT"},"src/core/interfaces/IAllo.sol":{"keccak256":"0xd3ea236154c6a35dfa5699f226283b92f20be90151c89726b64c3e301994dd80","urls":["bzz-raw://6b858848260585dbccbbb08c9dfc5e744cb92ed4c73a9a6e9fb7bf66c975fbea","dweb:/ipfs/QmQCn1AQyyfEEHk616Mhye7zswyvtgqChYCPzKt9gKF6pj"],"license":"AGPL-3.0-only"},"src/core/interfaces/IRegistry.sol":{"keccak256":"0x84702fb3f5f7f6a6a93165f60d96e4ca879050aeb3004e389d52dac0cc6c2f79","urls":["bzz-raw://635148af139b9bd5a18843c76d5aef3892038330e4cf8d23a327bea94f4d9715","dweb:/ipfs/QmcxNUKJPYTCLKxMPduRFMdwhHE1hhghWK72HF8krEsADv"],"license":"MIT"},"src/core/interfaces/IStrategy.sol":{"keccak256":"0x20607334ca94739d9c3d9da71f6b8f5bff55bbf171553cfb523be7d26e324ae5","urls":["bzz-raw://908d01620cb3674371fc8f3043f00407e4d98ce66c2e63c4e3254889af0644cf","dweb:/ipfs/QmWHxVEHc1Cwt9WDxrukSW6XW9M7Whky6iTVQK97X4E3eD"],"license":"AGPL-3.0-only"},"src/core/libraries/Errors.sol":{"keccak256":"0xab23c9c86be175f309dd8ac603d2ca07be961c8f5fee25174380499cf3c1caaa","urls":["bzz-raw://6092fe8abc662dffda624bfcfddafe385db240d1fc33304ca91fa2c2203eaf66","dweb:/ipfs/QmT2c6W5AQpnjDXAwN7XLKGWbUxYjsagnysrtMPJaDWKyY"],"license":"AGPL-3.0-only"},"src/core/libraries/Metadata.sol":{"keccak256":"0x452a95a8762fafd51d36295138f7e14189cbaaca7274d6fd34a59ad57a442d44","urls":["bzz-raw://2cc5507da2550ab9bfa0fbb263e703f9e70b831190bb7b2bcdbb231cab49795c","dweb:/ipfs/QmQXCD8v2HppXAX17aH49JvNyyfDYzGMrg63QNabUEXPpn"],"license":"AGPL-3.0-only"},"src/core/libraries/Native.sol":{"keccak256":"0x23dacace24a8c570a659dcc7e52fca2d39cc7577c6cfa674820cafaf194b29d5","urls":["bzz-raw://0727880a600b1803f02b58ad002938462dc61aacf841f5e1ee38f296fdd67e8a","dweb:/ipfs/QmdrEiJxFFnUfn2QUNxRAUMS1qwCnRtGeWPChaGzhAkRnv"],"license":"AGPL-3.0-only"},"src/core/libraries/Transfer.sol":{"keccak256":"0x832c4d87d848167785e914d0bf11c988468ca740fb2efab85e83c45a089f2810","urls":["bzz-raw://d3ab11790a586cc5c678be5a8e1e1b210ea3fe44be3578e54f99e3c51a8ce7d8","dweb:/ipfs/QmefGpGm8YFLCBixqKJ7WyVWyMn8Wp2xdFg3MjfRVeAWJ9"],"license":"AGPL-3.0-only"},"src/strategies/BaseStrategy.sol":{"keccak256":"0xd07f26dde6008e2d43d866e162aea8ee9b87d957dc6fa28879ac836b01850a6b","urls":["bzz-raw://5e9c014516c23560b8956d721f19644e70bad9d10c0ce07f77b49aa3043a82f3","dweb:/ipfs/QmUAGewUKV3wkrMHuQWWwhQ3Ye2tot33yEY4syF869LwYs"],"license":"AGPL-3.0-only"}},"version":1},"ast":{"absolutePath":"src/strategies/BaseStrategy.sol","id":43845,"exportedSymbols":{"BaseStrategy":[43844],"Errors":[43010],"IAllo":[42561],"IStrategy":[42920],"Transfer":[43238]},"nodeType":"SourceUnit","src":"42:19622:28","nodes":[{"id":43240,"nodeType":"PragmaDirective","src":"42:24:28","nodes":[],"literals":["solidity","^","0.8",".19"]},{"id":43241,"nodeType":"ImportDirective","src":"82:42:28","nodes":[],"absolutePath":"src/core/interfaces/IStrategy.sol","file":"../core/interfaces/IStrategy.sol","nameLocation":"-1:-1:-1","scope":43845,"sourceUnit":42921,"symbolAliases":[],"unitAlias":""},{"id":43243,"nodeType":"ImportDirective","src":"139:56:28","nodes":[],"absolutePath":"src/core/libraries/Transfer.sol","file":"../core/libraries/Transfer.sol","nameLocation":"-1:-1:-1","scope":43845,"sourceUnit":43239,"symbolAliases":[{"foreign":{"id":43242,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43238,"src":"147:8:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":43245,"nodeType":"ImportDirective","src":"196:52:28","nodes":[],"absolutePath":"src/core/libraries/Errors.sol","file":"../core/libraries/Errors.sol","nameLocation":"-1:-1:-1","scope":43845,"sourceUnit":43011,"symbolAliases":[{"foreign":{"id":43244,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43010,"src":"204:6:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":43844,"nodeType":"ContractDefinition","src":"4565:15098:28","nodes":[{"id":43256,"nodeType":"VariableDeclaration","src":"4739:29:28","nodes":[],"constant":false,"documentation":{"id":43253,"nodeType":"StructuredDocumentation","src":"4633:101:28","text":"==========================\n === Storage Variables ====\n =========================="},"mutability":"immutable","name":"allo","nameLocation":"4764:4:28","scope":43844,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAllo_$42561","typeString":"contract IAllo"},"typeName":{"id":43255,"nodeType":"UserDefinedTypeName","pathNode":{"id":43254,"name":"IAllo","nameLocations":["4739:5:28"],"nodeType":"IdentifierPath","referencedDeclaration":42561,"src":"4739:5:28"},"referencedDeclaration":42561,"src":"4739:5:28","typeDescriptions":{"typeIdentifier":"t_contract$_IAllo_$42561","typeString":"contract IAllo"}},"visibility":"internal"},{"id":43258,"nodeType":"VariableDeclaration","src":"4774:37:28","nodes":[],"constant":false,"mutability":"immutable","name":"strategyId","nameLocation":"4801:10:28","scope":43844,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":43257,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4774:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"id":43260,"nodeType":"VariableDeclaration","src":"4817:24:28","nodes":[],"constant":false,"mutability":"mutable","name":"poolActive","nameLocation":"4831:10:28","scope":43844,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":43259,"name":"bool","nodeType":"ElementaryTypeName","src":"4817:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"id":43262,"nodeType":"VariableDeclaration","src":"4847:23:28","nodes":[],"constant":false,"mutability":"mutable","name":"poolId","nameLocation":"4864:6:28","scope":43844,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":43261,"name":"uint256","nodeType":"ElementaryTypeName","src":"4847:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"id":43264,"nodeType":"VariableDeclaration","src":"4876:27:28","nodes":[],"constant":false,"mutability":"mutable","name":"poolAmount","nameLocation":"4893:10:28","scope":43844,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":43263,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"id":43288,"nodeType":"FunctionDefinition","src":"5210:135:28","nodes":[],"body":{"id":43287,"nodeType":"Block","src":"5258:87:28","nodes":[],"statements":[{"expression":{"id":43276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":43272,"name":"allo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43256,"src":"5268:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_IAllo_$42561","typeString":"contract IAllo"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":43274,"name":"_allo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43267,"src":"5281:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":43273,"name":"IAllo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42561,"src":"5275:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAllo_$42561_$","typeString":"type(contract IAllo)"}},"id":43275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5275:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAllo_$42561","typeString":"contract IAllo"}},"src":"5268:19:28","typeDescriptions":{"typeIdentifier":"t_contract$_IAllo_$42561","typeString":"contract IAllo"}},"id":43277,"nodeType":"ExpressionStatement","src":"5268:19:28"},{"expression":{"id":43285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":43278,"name":"strategyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43258,"src":"5297:10:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":43282,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43269,"src":"5331:5:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":43280,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5320:3:28","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":43281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5324:6:28","memberName":"encode","nodeType":"MemberAccess","src":"5320:10:28","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":43283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:17:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":43279,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5310:9:28","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":43284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5310:28:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5297:41:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":43286,"nodeType":"ExpressionStatement","src":"5297:41:28"}]},"documentation":{"id":43265,"nodeType":"StructuredDocumentation","src":"5046:159:28","text":"@notice Constructor to set the Allo contract and \"strategyId'.\n @param _allo Address of the Allo contract.\n @param _name Name of the strategy"},"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":43270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43267,"mutability":"mutable","name":"_allo","nameLocation":"5230:5:28","nodeType":"VariableDeclaration","scope":43288,"src":"5222:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43266,"name":"address","nodeType":"ElementaryTypeName","src":"5222:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":43269,"mutability":"mutable","name":"_name","nameLocation":"5251:5:28","nodeType":"VariableDeclaration","scope":43288,"src":"5237:19:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":43268,"name":"string","nodeType":"ElementaryTypeName","src":"5237:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5221:36:28"},"returnParameters":{"id":43271,"nodeType":"ParameterList","parameters":[],"src":"5258:0:28"},"scope":43844,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":43296,"nodeType":"ModifierDefinition","src":"5630:64:28","nodes":[],"body":{"id":43295,"nodeType":"Block","src":"5650:44:28","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":43291,"name":"_checkOnlyAllo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43638,"src":"5660:14:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":43292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5660:16:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":43293,"nodeType":"ExpressionStatement","src":"5660:16:28"},{"id":43294,"nodeType":"PlaceholderStatement","src":"5686:1:28"}]},"documentation":{"id":43289,"nodeType":"StructuredDocumentation","src":"5487:138:28","text":"@notice Modifier to check if the 'msg.sender' is the Allo contract.\n @dev Reverts if the 'msg.sender' is not the Allo contract."},"name":"onlyAllo","nameLocation":"5639:8:28","parameters":{"id":43290,"nodeType":"ParameterList","parameters":[],"src":"5647:2:28"},"virtual":false,"visibility":"internal"},{"id":43307,"nodeType":"ModifierDefinition","src":"5902:100:28","nodes":[],"body":{"id":43306,"nodeType":"Block","src":"5944:58:28","nodes":[],"statements":[{"expression":{"arguments":[{"id":43302,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43299,"src":"5976:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":43301,"name":"_checkOnlyPoolManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43655,"src":"5954:21:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$__$","typeString":"function (address) view"}},"id":43303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5954:30:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":43304,"nodeType":"ExpressionStatement","src":"5954:30:28"},{"id":43305,"nodeType":"PlaceholderStatement","src":"5994:1:28"}]},"documentation":{"id":43297,"nodeType":"StructuredDocumentation","src":"5700:197:28","text":"@notice Modifier to check if the '_sender' is a pool manager.\n @dev Reverts if the '_sender' is not a pool manager.\n @param _sender The address to check if they are a pool manager"},"name":"onlyPoolManager","nameLocation":"5911:15:28","parameters":{"id":43300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43299,"mutability":"mutable","name":"_sender","nameLocation":"5935:7:28","nodeType":"VariableDeclaration","scope":43307,"src":"5927:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43298,"name":"address","nodeType":"ElementaryTypeName","src":"5927:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5926:17:28"},"virtual":false,"visibility":"internal"},{"id":43315,"nodeType":"ModifierDefinition","src":"6113:76:28","nodes":[],"body":{"id":43314,"nodeType":"Block","src":"6139:50:28","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":43310,"name":"_checkOnlyActivePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43666,"src":"6149:20:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":43311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:22:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":43312,"nodeType":"ExpressionStatement","src":"6149:22:28"},{"id":43313,"nodeType":"PlaceholderStatement","src":"6181:1:28"}]},"documentation":{"id":43308,"nodeType":"StructuredDocumentation","src":"6008:100:28","text":"@notice Modifier to check if the pool is active.\n @dev Reverts if the pool is not active."},"name":"onlyActivePool","nameLocation":"6122:14:28","parameters":{"id":43309,"nodeType":"ParameterList","parameters":[],"src":"6136:2:28"},"virtual":false,"visibility":"internal"},{"id":43323,"nodeType":"ModifierDefinition","src":"6298:76:28","nodes":[],"body":{"id":43322,"nodeType":"Block","src":"6326:48:28","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":43318,"name":"_checkInactivePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43676,"src":"6336:18:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":43319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6336:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":43320,"nodeType":"ExpressionStatement","src":"6336:20:28"},{"id":43321,"nodeType":"PlaceholderStatement","src":"6366:1:28"}]},"documentation":{"id":43316,"nodeType":"StructuredDocumentation","src":"6195:98:28","text":"@notice Modifier to check if the pool is inactive.\n @dev Reverts if the pool is active."},"name":"onlyInactivePool","nameLocation":"6307:16:28","parameters":{"id":43317,"nodeType":"ParameterList","parameters":[],"src":"6323:2:28"},"virtual":false,"visibility":"internal"},{"id":43331,"nodeType":"ModifierDefinition","src":"6495:78:28","nodes":[],"body":{"id":43330,"nodeType":"Block","src":"6522:51:28","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":43326,"name":"_checkOnlyInitialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43688,"src":"6532:21:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":43327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6532:23:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":43328,"nodeType":"ExpressionStatement","src":"6532:23:28"},{"id":43329,"nodeType":"PlaceholderStatement","src":"6565:1:28"}]},"documentation":{"id":43324,"nodeType":"StructuredDocumentation","src":"6380:110:28","text":"@notice Modifier to check if the pool is initialized.\n @dev Reverts if the pool is not initialized."},"name":"onlyInitialized","nameLocation":"6504:15:28","parameters":{"id":43325,"nodeType":"ParameterList","parameters":[],"src":"6519:2:28"},"virtual":false,"visibility":"internal"},{"id":43342,"nodeType":"FunctionDefinition","src":"6785:86:28","nodes":[],"body":{"id":43341,"nodeType":"Block","src":"6843:28:28","nodes":[],"statements":[{"expression":{"id":43339,"name":"allo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43256,"src":"6860:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_IAllo_$42561","typeString":"contract IAllo"}},"functionReturnParameters":43338,"id":43340,"nodeType":"Return","src":"6853:11:28"}]},"baseFunctions":[42821],"documentation":{"id":43332,"nodeType":"StructuredDocumentation","src":"6703:77:28","text":"@notice Getter for the 'Allo' contract.\n @return The Allo contract"},"functionSelector":"15cc481e","implemented":true,"kind":"function","modifiers":[],"name":"getAllo","nameLocation":"6794:7:28","overrides":{"id":43334,"nodeType":"OverrideSpecifier","overrides":[],"src":"6818:8:28"},"parameters":{"id":43333,"nodeType":"ParameterList","parameters":[],"src":"6801:2:28"},"returnParameters":{"id":43338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":43342,"src":"6836:5:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAllo_$42561","typeString":"contract IAllo"},"typeName":{"id":43336,"nodeType":"UserDefinedTypeName","pathNode":{"id":43335,"name":"IAllo","nameLocations":["6836:5:28"],"nodeType":"IdentifierPath","referencedDeclaration":42561,"src":"6836:5:28"},"referencedDeclaration":42561,"src":"6836:5:28","typeDescriptions":{"typeIdentifier":"t_contract$_IAllo_$42561","typeString":"contract IAllo"}},"visibility":"internal"}],"src":"6835:7:28"},"scope":43844,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":43352,"nodeType":"FunctionDefinition","src":"6953:92:28","nodes":[],"body":{"id":43351,"nodeType":"Block","src":"7015:30:28","nodes":[],"statements":[{"expression":{"id":43349,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43262,"src":"7032:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":43348,"id":43350,"nodeType":"Return","src":"7025:13:28"}]},"baseFunctions":[42827],"documentation":{"id":43343,"nodeType":"StructuredDocumentation","src":"6877:71:28","text":"@notice Getter for the 'poolId'.\n @return The ID of the pool"},"functionSelector":"38fff2d0","implemented":true,"kind":"function","modifiers":[],"name":"getPoolId","nameLocation":"6962:9:28","overrides":{"id":43345,"nodeType":"OverrideSpecifier","overrides":[],"src":"6988:8:28"},"parameters":{"id":43344,"nodeType":"ParameterList","parameters":[],"src":"6971:2:28"},"returnParameters":{"id":43348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43347,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":43352,"src":"7006:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":43346,"name":"uint256","nodeType":"ElementaryTypeName","src":"7006:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7005:9:28"},"scope":43844,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":43362,"nodeType":"FunctionDefinition","src":"7135:100:28","nodes":[],"body":{"id":43361,"nodeType":"Block","src":"7201:34:28","nodes":[],"statements":[{"expression":{"id":43359,"name":"strategyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43258,"src":"7218:10:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":43358,"id":43360,"nodeType":"Return","src":"7211:17:28"}]},"baseFunctions":[42833],"documentation":{"id":43353,"nodeType":"StructuredDocumentation","src":"7051:79:28","text":"@notice Getter for the 'strategyId'.\n @return The ID of the strategy"},"functionSelector":"42fda9c7","implemented":true,"kind":"function","modifiers":[],"name":"getStrategyId","nameLocation":"7144:13:28","overrides":{"id":43355,"nodeType":"OverrideSpecifier","overrides":[],"src":"7174:8:28"},"parameters":{"id":43354,"nodeType":"ParameterList","parameters":[],"src":"7157:2:28"},"returnParameters":{"id":43358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43357,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":43362,"src":"7192:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":43356,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7192:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7191:9:28"},"scope":43844,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":43372,"nodeType":"FunctionDefinition","src":"7326:108:28","nodes":[],"body":{"id":43371,"nodeType":"Block","src":"7400:34:28","nodes":[],"statements":[{"expression":{"id":43369,"name":"poolAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43264,"src":"7417:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":43368,"id":43370,"nodeType":"Return","src":"7410:17:28"}]},"baseFunctions":[42853],"documentation":{"id":43363,"nodeType":"StructuredDocumentation","src":"7241:80:28","text":"@notice Getter for the 'poolAmount'.\n @return The balance of the pool"},"functionSelector":"4ab4ba42","implemented":true,"kind":"function","modifiers":[],"name":"getPoolAmount","nameLocation":"7335:13:28","overrides":{"id":43365,"nodeType":"OverrideSpecifier","overrides":[],"src":"7373:8:28"},"parameters":{"id":43364,"nodeType":"ParameterList","parameters":[],"src":"7348:2:28"},"returnParameters":{"id":43368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":43372,"src":"7391:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":43366,"name":"uint256","nodeType":"ElementaryTypeName","src":"7391:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7390:9:28"},"scope":43844,"stateMutability":"view","virtual":true,"visibility":"external"},{"id":43383,"nodeType":"FunctionDefinition","src":"7566:101:28","nodes":[],"body":{"id":43382,"nodeType":"Block","src":"7628:39:28","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":43379,"name":"_isPoolActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43712,"src":"7645:13:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":43380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7645:15:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":43378,"id":43381,"nodeType":"Return","src":"7638:22:28"}]},"baseFunctions":[42847],"documentation":{"id":43373,"nodeType":"StructuredDocumentation","src":"7440:121:28","text":"@notice Getter for whether or not the pool is active.\n @return 'true' if the pool is active, otherwise 'false'"},"functionSelector":"df868ed3","implemented":true,"kind":"function","modifiers":[],"name":"isPoolActive","nameLocation":"7575:12:28","overrides":{"id":43375,"nodeType":"OverrideSpecifier","overrides":[],"src":"7604:8:28"},"parameters":{"id":43374,"nodeType":"ParameterList","parameters":[],"src":"7587:2:28"},"returnParameters":{"id":43378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":43383,"src":"7622:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":43376,"name":"bool","nodeType":"ElementaryTypeName","src":"7622:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7621:6:28"},"scope":43844,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":43397,"nodeType":"FunctionDefinition","src":"7823:160:28","nodes":[],"body":{"id":43396,"nodeType":"Block","src":"7926:57:28","nodes":[],"statements":[{"expression":{"arguments":[{"id":43393,"name":"_recipientId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43386,"src":"7963:12:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":43392,"name":"_getRecipientStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43769,"src":"7943:19:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_enum$_Status_$42766_$","typeString":"function (address) view returns (enum IStrategy.Status)"}},"id":43394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7943:33:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Status_$42766","typeString":"enum IStrategy.Status"}},"functionReturnParameters":43391,"id":43395,"nodeType":"Return","src":"7936:40:28"}]},"baseFunctions":[42868],"documentation":{"id":43384,"nodeType":"StructuredDocumentation","src":"7673:145:28","text":"@notice Getter for the status of a recipient.\n @param _recipientId The ID of the recipient\n @return The status of the recipient"},"functionSelector":"eb11af93","implemented":true,"kind":"function","modifiers":[],"name":"getRecipientStatus","nameLocation":"7832:18:28","parameters":{"id":43387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43386,"mutability":"mutable","name":"_recipientId","nameLocation":"7868:12:28","nodeType":"VariableDeclaration","scope":43397,"src":"7860:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43385,"name":"address","nodeType":"ElementaryTypeName","src":"7860:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7850:36:28"},"returnParameters":{"id":43391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":43397,"src":"7918:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$42766","typeString":"enum IStrategy.Status"},"typeName":{"id":43389,"nodeType":"UserDefinedTypeName","pathNode":{"id":43388,"name":"Status","nameLocations":["7918:6:28"],"nodeType":"IdentifierPath","referencedDeclaration":42766,"src":"7918:6:28"},"referencedDeclaration":42766,"src":"7918:6:28","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$42766","typeString":"enum IStrategy.Status"}},"visibility":"internal"}],"src":"7917:8:28"},"scope":43844,"stateMutability":"view","virtual":true,"visibility":"external"},{"id":43424,"nodeType":"FunctionDefinition","src":"8283:350:28","nodes":[],"body":{"id":43423,"nodeType":"Block","src":"8355:278:28","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":43407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":43405,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43262,"src":"8442:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":43406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8452:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8442:11:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":43411,"nodeType":"IfStatement","src":"8438:45:28","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":43408,"name":"ALREADY_INITIALIZED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42962,"src":"8462:19:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":43409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8462:21:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":43410,"nodeType":"RevertStatement","src":"8455:28:28"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":43414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":43412,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43400,"src":"8570:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":43413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8581:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8570:12:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":43418,"nodeType":"IfStatement","src":"8566:34:28","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":43415,"name":"INVALID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42926,"src":"8591:7:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":43416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8591:9:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":43417,"nodeType":"RevertStatement","src":"8584:16:28"}},{"expression":{"id":43421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":43419,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43262,"src":"8610:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":43420,"name":"_poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43400,"src":"8619:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8610:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":43422,"nodeType":"ExpressionStatement","src":"8610:16:28"}]},"documentation":{"id":43398,"nodeType":"StructuredDocumentation","src":"8125:153:28","text":"@notice Initializes the 'Basetrategy'.\n @dev Will revert if the poolId is invalid or already initialized\n @param _poolId ID of the pool"},"implemented":true,"kind":"function","modifiers":[{"id":43403,"kind":"modifierInvocation","modifierName":{"id":43402,"name":"onlyAllo","nameLocations":["8346:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":43296,"src":"8346:8:28"},"nodeType":"ModifierInvocation","src":"8346:8:28"}],"name":"__BaseStrategy_init","nameLocation":"8292:19:28","parameters":{"id":43401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43400,"mutability":"mutable","name":"_poolId","nameLocation":"8320:7:28","nodeType":"VariableDeclaration","scope":43424,"src":"8312:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":43399,"name":"uint256","nodeType":"ElementaryTypeName","src":"8312:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8311:17:28"},"returnParameters":{"id":43404,"nodeType":"ParameterList","parameters":[],"src":"8355:0:28"},"scope":43844,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":43446,"nodeType":"FunctionDefinition","src":"8830:197:28","nodes":[],"body":{"id":43445,"nodeType":"Block","src":"8902:125:28","nodes":[],"statements":[{"expression":{"arguments":[{"id":43434,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43427,"src":"8938:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":43433,"name":"_beforeIncreasePoolAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43776,"src":"8912:25:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":43435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8912:34:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":43436,"nodeType":"ExpressionStatement","src":"8912:34:28"},{"expression":{"id":43439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":43437,"name":"poolAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43264,"src":"8956:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":43438,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43427,"src":"8970:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8956:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":43440,"nodeType":"ExpressionStatement","src":"8956:21:28"},{"expression":{"arguments":[{"id":43442,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43427,"src":"9012:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":43441,"name":"_afterIncreasePoolAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43783,"src":"8987:24:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":43443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8987:33:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":43444,"nodeType":"ExpressionStatement","src":"8987:33:28"}]},"baseFunctions":[42859],"documentation":{"id":43425,"nodeType":"StructuredDocumentation","src":"8639:186:28","text":"@notice Increases the pool amount.\n @dev Increases the 'poolAmount' by '_amount'. Only 'Allo' contract can call this.\n @param _amount The amount to increase the pool by"},"functionSelector":"f5b0dfb7","implemented":true,"kind":"function","modifiers":[{"id":43431,"kind":"modifierInvocation","modifierName":{"id":43430,"name":"onlyAllo","nameLocations":["8893:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":43296,"src":"8893:8:28"},"nodeType":"ModifierInvocation","src":"8893:8:28"}],"name":"increasePoolAmount","nameLocation":"8839:18:28","overrides":{"id":43429,"nodeType":"OverrideSpecifier","overrides":[],"src":"8884:8:28"},"parameters":{"id":43428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43427,"mutability":"mutable","name":"_amount","nameLocation":"8866:7:28","nodeType":"VariableDeclaration","scope":43446,"src":"8858:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":43426,"name":"uint256","nodeType":"ElementaryTypeName","src":"8858:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8857:17:28"},"returnParameters":{"id":43432,"nodeType":"ParameterList","parameters":[],"src":"8902:0:28"},"scope":43844,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":43478,"nodeType":"FunctionDefinition","src":"9443:322:28","nodes":[],"body":{"id":43477,"nodeType":"Block","src":"9601:164:28","nodes":[],"statements":[{"expression":{"arguments":[{"id":43461,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43449,"src":"9636:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":43462,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43451,"src":"9643:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":43460,"name":"_beforeRegisterRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43792,"src":"9611:24:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_address_$returns$__$","typeString":"function (bytes memory,address)"}},"id":43463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9611:40:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":43464,"nodeType":"ExpressionStatement","src":"9611:40:28"},{"expression":{"id":43470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":43465,"name":"recipientId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43458,"src":"9661:11:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":43467,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43449,"src":"9694:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":43468,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43451,"src":"9701:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":43466,"name":"_registerRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43730,"src":"9675:18:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_address_$returns$_t_address_$","typeString":"function (bytes memory,address) returns (address)"}},"id":43469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9675:34:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9661:48:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":43471,"nodeType":"ExpressionStatement","src":"9661:48:28"},{"expression":{"arguments":[{"id":43473,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43449,"src":"9743:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":43474,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43451,"src":"9750:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":43472,"name":"_afterRegisterRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43801,"src":"9719:23:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_address_$returns$__$","typeString":"function (bytes memory,address)"}},"id":43475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9719:39:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":43476,"nodeType":"ExpressionStatement","src":"9719:39:28"}]},"baseFunctions":[42900],"documentation":{"id":43447,"nodeType":"StructuredDocumentation","src":"9033:405:28","text":"@notice Registers a recipient.\n @dev Registers a recipient and returns the ID of the recipient. The encoded '_data' will be determined by the\n      strategy implementation. Only 'Allo' contract can call this when it is initialized.\n @param _data The data to use to register the recipient\n @param _sender The address of the sender\n @return recipientId The recipientId"},"functionSelector":"2bbe0cae","implemented":true,"kind":"function","modifiers":[{"id":43454,"kind":"modifierInvocation","modifierName":{"id":43453,"name":"onlyAllo","nameLocations":["9546:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":43296,"src":"9546:8:28"},"nodeType":"ModifierInvocation","src":"9546:8:28"},{"id":43456,"kind":"modifierInvocation","modifierName":{"id":43455,"name":"onlyInitialized","nameLocations":["9555:15:28"],"nodeType":"IdentifierPath","referencedDeclaration":43331,"src":"9555:15:28"},"nodeType":"ModifierInvocation","src":"9555:15:28"}],"name":"registerRecipient","nameLocation":"9452:17:28","parameters":{"id":43452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43449,"mutability":"mutable","name":"_data","nameLocation":"9492:5:28","nodeType":"VariableDeclaration","scope":43478,"src":"9479:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":43448,"name":"bytes","nodeType":"ElementaryTypeName","src":"9479:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":43451,"mutability":"mutable","name":"_sender","nameLocation":"9515:7:28","nodeType":"VariableDeclaration","scope":43478,"src":"9507:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43450,"name":"address","nodeType":"ElementaryTypeName","src":"9507:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9469:59:28"},"returnParameters":{"id":43459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43458,"mutability":"mutable","name":"recipientId","nameLocation":"9588:11:28","nodeType":"VariableDeclaration","scope":43478,"src":"9580:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43457,"name":"address","nodeType":"ElementaryTypeName","src":"9580:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9579:21:28"},"scope":43844,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":43506,"nodeType":"FunctionDefinition","src":"10084:242:28","nodes":[],"body":{"id":43505,"nodeType":"Block","src":"10203:123:28","nodes":[],"statements":[{"expression":{"arguments":[{"id":43491,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43481,"src":"10229:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":43492,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43483,"src":"10236:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":43490,"name":"_beforeAllocate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43810,"src":"10213:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_address_$returns$__$","typeString":"function (bytes memory,address)"}},"id":43493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10213:31:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":43494,"nodeType":"ExpressionStatement","src":"10213:31:28"},{"expression":{"arguments":[{"id":43496,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43481,"src":"10264:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":43497,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43483,"src":"10271:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":43495,"name":"_allocate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43738,"src":"10254:9:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_address_$returns$__$","typeString":"function (bytes memory,address)"}},"id":43498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10254:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":43499,"nodeType":"ExpressionStatement","src":"10254:25:28"},{"expression":{"arguments":[{"id":43501,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43481,"src":"10304:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":43502,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43483,"src":"10311:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":43500,"name":"_afterAllocate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43819,"src":"10289:14:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_address_$returns$__$","typeString":"function (bytes memory,address)"}},"id":43503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10289:30:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":43504,"nodeType":"ExpressionStatement","src":"10289:30:28"}]},"baseFunctions":[42908],"documentation":{"id":43479,"nodeType":"StructuredDocumentation","src":"9771:308:28","text":"@notice Allocates to a recipient.\n @dev The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can\n      call this when it is initialized.\n @param _data The data to use to allocate to the recipient\n @param _sender The address of the sender"},"functionSelector":"ef2920fc","implemented":true,"kind":"function","modifiers":[{"id":43486,"kind":"modifierInvocation","modifierName":{"id":43485,"name":"onlyAllo","nameLocations":["10178:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":43296,"src":"10178:8:28"},"nodeType":"ModifierInvocation","src":"10178:8:28"},{"id":43488,"kind":"modifierInvocation","modifierName":{"id":43487,"name":"onlyInitialized","nameLocations":["10187:15:28"],"nodeType":"IdentifierPath","referencedDeclaration":43331,"src":"10187:15:28"},"nodeType":"ModifierInvocation","src":"10187:15:28"}],"name":"allocate","nameLocation":"10093:8:28","parameters":{"id":43484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43481,"mutability":"mutable","name":"_data","nameLocation":"10124:5:28","nodeType":"VariableDeclaration","scope":43506,"src":"10111:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":43480,"name":"bytes","nodeType":"ElementaryTypeName","src":"10111:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":43483,"mutability":"mutable","name":"_sender","nameLocation":"10147:7:28","nodeType":"VariableDeclaration","scope":43506,"src":"10139:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43482,"name":"address","nodeType":"ElementaryTypeName","src":"10139:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10101:59:28"},"returnParameters":{"id":43489,"nodeType":"ParameterList","parameters":[],"src":"10203:0:28"},"scope":43844,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":43540,"nodeType":"FunctionDefinition","src":"10719:327:28","nodes":[],"body":{"id":43539,"nodeType":"Block","src":"10872:174:28","nodes":[],"statements":[{"expression":{"arguments":[{"id":43522,"name":"_recipientIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43510,"src":"10900:13:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":43523,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43512,"src":"10915:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":43524,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43514,"src":"10922:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":43521,"name":"_beforeDistribute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43831,"src":"10882:17:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$","typeString":"function (address[] memory,bytes memory,address)"}},"id":43525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10882:48:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":43526,"nodeType":"ExpressionStatement","src":"10882:48:28"},{"expression":{"arguments":[{"id":43528,"name":"_recipientIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43510,"src":"10952:13:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":43529,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43512,"src":"10967:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":43530,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43514,"src":"10974:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":43527,"name":"_distribute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43749,"src":"10940:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$","typeString":"function (address[] memory,bytes memory,address)"}},"id":43531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10940:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":43532,"nodeType":"ExpressionStatement","src":"10940:42:28"},{"expression":{"arguments":[{"id":43534,"name":"_recipientIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43510,"src":"11009:13:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":43535,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43512,"src":"11024:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":43536,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43514,"src":"11031:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":43533,"name":"_afterDistribute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43843,"src":"10992:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$","typeString":"function (address[] memory,bytes memory,address)"}},"id":43537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10992:47:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":43538,"nodeType":"ExpressionStatement","src":"10992:47:28"}]},"baseFunctions":[42919],"documentation":{"id":43507,"nodeType":"StructuredDocumentation","src":"10332:382:28","text":"@notice Distributes funds (tokens) to recipients.\n @dev The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can\n      call this when it is initialized.\n @param _recipientIds The IDs of the recipients\n @param _data The data to use to distribute to the recipients\n @param _sender The address of the sender"},"functionSelector":"0a6f0ee9","implemented":true,"kind":"function","modifiers":[{"id":43517,"kind":"modifierInvocation","modifierName":{"id":43516,"name":"onlyAllo","nameLocations":["10847:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":43296,"src":"10847:8:28"},"nodeType":"ModifierInvocation","src":"10847:8:28"},{"id":43519,"kind":"modifierInvocation","modifierName":{"id":43518,"name":"onlyInitialized","nameLocations":["10856:15:28"],"nodeType":"IdentifierPath","referencedDeclaration":43331,"src":"10856:15:28"},"nodeType":"ModifierInvocation","src":"10856:15:28"}],"name":"distribute","nameLocation":"10728:10:28","parameters":{"id":43515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43510,"mutability":"mutable","name":"_recipientIds","nameLocation":"10765:13:28","nodeType":"VariableDeclaration","scope":43540,"src":"10748:30:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":43508,"name":"address","nodeType":"ElementaryTypeName","src":"10748:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":43509,"nodeType":"ArrayTypeName","src":"10748:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":43512,"mutability":"mutable","name":"_data","nameLocation":"10801:5:28","nodeType":"VariableDeclaration","scope":43540,"src":"10788:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":43511,"name":"bytes","nodeType":"ElementaryTypeName","src":"10788:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":43514,"mutability":"mutable","name":"_sender","nameLocation":"10824:7:28","nodeType":"VariableDeclaration","scope":43540,"src":"10816:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43513,"name":"address","nodeType":"ElementaryTypeName","src":"10816:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10738:99:28"},"returnParameters":{"id":43520,"nodeType":"ParameterList","parameters":[],"src":"10872:0:28"},"scope":43844,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":43608,"nodeType":"FunctionDefinition","src":"11383:683:28","nodes":[],"body":{"id":43607,"nodeType":"Block","src":"11543:523:28","nodes":[],"statements":[{"assignments":[43556],"declarations":[{"constant":false,"id":43556,"mutability":"mutable","name":"recipientLength","nameLocation":"11561:15:28","nodeType":"VariableDeclaration","scope":43607,"src":"11553:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":43555,"name":"uint256","nodeType":"ElementaryTypeName","src":"11553:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":43559,"initialValue":{"expression":{"id":43557,"name":"_recipientIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43544,"src":"11579:13:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":43558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11593:6:28","memberName":"length","nodeType":"MemberAccess","src":"11579:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11553:46:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":43563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":43560,"name":"recipientLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43556,"src":"11716:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":43561,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43547,"src":"11735:5:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":43562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11741:6:28","memberName":"length","nodeType":"MemberAccess","src":"11735:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11716:31:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":43567,"nodeType":"IfStatement","src":"11712:60:28","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":43564,"name":"ARRAY_MISMATCH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42977,"src":"11756:14:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":43565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11756:16:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":43566,"nodeType":"RevertStatement","src":"11749:23:28"}},{"assignments":[43572],"declarations":[{"constant":false,"id":43572,"mutability":"mutable","name":"payouts","nameLocation":"11806:7:28","nodeType":"VariableDeclaration","scope":43607,"src":"11783:30:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PayoutSummary_$42771_memory_ptr_$dyn_memory_ptr","typeString":"struct IStrategy.PayoutSummary[]"},"typeName":{"baseType":{"id":43570,"nodeType":"UserDefinedTypeName","pathNode":{"id":43569,"name":"PayoutSummary","nameLocations":["11783:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":42771,"src":"11783:13:28"},"referencedDeclaration":42771,"src":"11783:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_PayoutSummary_$42771_storage_ptr","typeString":"struct IStrategy.PayoutSummary"}},"id":43571,"nodeType":"ArrayTypeName","src":"11783:15:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PayoutSummary_$42771_storage_$dyn_storage_ptr","typeString":"struct IStrategy.PayoutSummary[]"}},"visibility":"internal"}],"id":43579,"initialValue":{"arguments":[{"id":43577,"name":"recipientLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43556,"src":"11836:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":43576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"11816:19:28","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_PayoutSummary_$42771_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct IStrategy.PayoutSummary memory[] memory)"},"typeName":{"baseType":{"id":43574,"nodeType":"UserDefinedTypeName","pathNode":{"id":43573,"name":"PayoutSummary","nameLocations":["11820:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":42771,"src":"11820:13:28"},"referencedDeclaration":42771,"src":"11820:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_PayoutSummary_$42771_storage_ptr","typeString":"struct IStrategy.PayoutSummary"}},"id":43575,"nodeType":"ArrayTypeName","src":"11820:15:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PayoutSummary_$42771_storage_$dyn_storage_ptr","typeString":"struct IStrategy.PayoutSummary[]"}}},"id":43578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11816:36:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PayoutSummary_$42771_memory_ptr_$dyn_memory_ptr","typeString":"struct IStrategy.PayoutSummary memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11783:69:28"},{"body":{"id":43603,"nodeType":"Block","src":"11901:135:28","statements":[{"expression":{"id":43597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":43586,"name":"payouts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43572,"src":"11915:7:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PayoutSummary_$42771_memory_ptr_$dyn_memory_ptr","typeString":"struct IStrategy.PayoutSummary memory[] memory"}},"id":43588,"indexExpression":{"id":43587,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43581,"src":"11923:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11915:10:28","typeDescriptions":{"typeIdentifier":"t_struct$_PayoutSummary_$42771_memory_ptr","typeString":"struct IStrategy.PayoutSummary memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":43590,"name":"_recipientIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43544,"src":"11939:13:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":43592,"indexExpression":{"id":43591,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43581,"src":"11953:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11939:16:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":43593,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43547,"src":"11957:5:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":43595,"indexExpression":{"id":43594,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43581,"src":"11963:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11957:8:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":43589,"name":"_getPayout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43760,"src":"11928:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_struct$_PayoutSummary_$42771_memory_ptr_$","typeString":"function (address,bytes memory) view returns (struct IStrategy.PayoutSummary memory)"}},"id":43596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11928:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PayoutSummary_$42771_memory_ptr","typeString":"struct IStrategy.PayoutSummary memory"}},"src":"11915:51:28","typeDescriptions":{"typeIdentifier":"t_struct$_PayoutSummary_$42771_memory_ptr","typeString":"struct IStrategy.PayoutSummary memory"}},"id":43598,"nodeType":"ExpressionStatement","src":"11915:51:28"},{"id":43602,"nodeType":"UncheckedBlock","src":"11980:46:28","statements":[{"expression":{"id":43600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12008:3:28","subExpression":{"id":43599,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43581,"src":"12008:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":43601,"nodeType":"ExpressionStatement","src":"12008:3:28"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":43585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":43583,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43581,"src":"11878:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":43584,"name":"recipientLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43556,"src":"11882:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11878:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":43604,"initializationExpression":{"assignments":[43581],"declarations":[{"constant":false,"id":43581,"mutability":"mutable","name":"i","nameLocation":"11875:1:28","nodeType":"VariableDeclaration","scope":43604,"src":"11867:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":43580,"name":"uint256","nodeType":"ElementaryTypeName","src":"11867:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":43582,"nodeType":"VariableDeclarationStatement","src":"11867:9:28"},"nodeType":"ForStatement","src":"11862:174:28"},{"expression":{"id":43605,"name":"payouts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43572,"src":"12052:7:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PayoutSummary_$42771_memory_ptr_$dyn_memory_ptr","typeString":"struct IStrategy.PayoutSummary memory[] memory"}},"functionReturnParameters":43554,"id":43606,"nodeType":"Return","src":"12045:14:28"}]},"baseFunctions":[42882],"documentation":{"id":43541,"nodeType":"StructuredDocumentation","src":"11052:326:28","text":"@notice Gets the payout summary for recipients.\n @dev The encoded '_data' will be determined by the strategy implementation.\n @param _recipientIds The IDs of the recipients\n @param _data The data to use to get the payout summary for the recipients\n @return The payout summary for the recipients"},"functionSelector":"b2b878d0","implemented":true,"kind":"function","modifiers":[],"name":"getPayouts","nameLocation":"11392:10:28","overrides":{"id":43549,"nodeType":"OverrideSpecifier","overrides":[],"src":"11501:8:28"},"parameters":{"id":43548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43544,"mutability":"mutable","name":"_recipientIds","nameLocation":"11429:13:28","nodeType":"VariableDeclaration","scope":43608,"src":"11412:30:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":43542,"name":"address","nodeType":"ElementaryTypeName","src":"11412:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":43543,"nodeType":"ArrayTypeName","src":"11412:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":43547,"mutability":"mutable","name":"_data","nameLocation":"11467:5:28","nodeType":"VariableDeclaration","scope":43608,"src":"11452:20:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":43545,"name":"bytes","nodeType":"ElementaryTypeName","src":"11452:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":43546,"nodeType":"ArrayTypeName","src":"11452:7:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"11402:76:28"},"returnParameters":{"id":43554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":43608,"src":"11519:22:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PayoutSummary_$42771_memory_ptr_$dyn_memory_ptr","typeString":"struct IStrategy.PayoutSummary[]"},"typeName":{"baseType":{"id":43551,"nodeType":"UserDefinedTypeName","pathNode":{"id":43550,"name":"PayoutSummary","nameLocations":["11519:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":42771,"src":"11519:13:28"},"referencedDeclaration":42771,"src":"11519:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_PayoutSummary_$42771_storage_ptr","typeString":"struct IStrategy.PayoutSummary"}},"id":43552,"nodeType":"ArrayTypeName","src":"11519:15:28","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PayoutSummary_$42771_storage_$dyn_storage_ptr","typeString":"struct IStrategy.PayoutSummary[]"}},"visibility":"internal"}],"src":"11518:24:28"},"scope":43844,"stateMutability":"view","virtual":true,"visibility":"external"},{"id":43622,"nodeType":"FunctionDefinition","src":"12390:159:28","nodes":[],"body":{"id":43621,"nodeType":"Block","src":"12496:53:28","nodes":[],"statements":[{"expression":{"arguments":[{"id":43618,"name":"_allocator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43611,"src":"12531:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":43617,"name":"_isValidAllocator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43720,"src":"12513:17:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":43619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12513:29:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":43616,"id":43620,"nodeType":"Return","src":"12506:36:28"}]},"baseFunctions":[42841],"documentation":{"id":43609,"nodeType":"StructuredDocumentation","src":"12072:313:28","text":"@notice Checks if the '_allocator' is a valid allocator.\n @dev How the allocator is determined is up to the strategy implementation.\n @param _allocator The address to check if it is a valid allocator for the strategy.\n @return 'true' if the address is a valid allocator, 'false' otherwise"},"functionSelector":"4d31d087","implemented":true,"kind":"function","modifiers":[],"name":"isValidAllocator","nameLocation":"12399:16:28","overrides":{"id":43613,"nodeType":"OverrideSpecifier","overrides":[],"src":"12472:8:28"},"parameters":{"id":43612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43611,"mutability":"mutable","name":"_allocator","nameLocation":"12433:10:28","nodeType":"VariableDeclaration","scope":43622,"src":"12425:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43610,"name":"address","nodeType":"ElementaryTypeName","src":"12425:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12415:34:28"},"returnParameters":{"id":43616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43615,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":43622,"src":"12490:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":43614,"name":"bool","nodeType":"ElementaryTypeName","src":"12490:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12489:6:28"},"scope":43844,"stateMutability":"view","virtual":true,"visibility":"external"},{"id":43638,"nodeType":"FunctionDefinition","src":"12823:111:28","nodes":[],"body":{"id":43637,"nodeType":"Block","src":"12863:71:28","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":43632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":43626,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12877:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":43627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12881:6:28","memberName":"sender","nodeType":"MemberAccess","src":"12877:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":43630,"name":"allo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43256,"src":"12899:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_IAllo_$42561","typeString":"contract IAllo"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IAllo_$42561","typeString":"contract IAllo"}],"id":43629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12891:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":43628,"name":"address","nodeType":"ElementaryTypeName","src":"12891:7:28","typeDescriptions":{}}},"id":43631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12891:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12877:27:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":43636,"nodeType":"IfStatement","src":"12873:54:28","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":43633,"name":"UNAUTHORIZED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42935,"src":"12913:12:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":43634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12913:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":43635,"nodeType":"RevertStatement","src":"12906:21:28"}}]},"documentation":{"id":43623,"nodeType":"StructuredDocumentation","src":"12691:127:28","text":"@notice Checks if the 'msg.sender' is the Allo contract.\n @dev Reverts if the 'msg.sender' is not the Allo contract."},"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnlyAllo","nameLocation":"12832:14:28","parameters":{"id":43624,"nodeType":"ParameterList","parameters":[],"src":"12846:2:28"},"returnParameters":{"id":43625,"nodeType":"ParameterList","parameters":[],"src":"12863:0:28"},"scope":43844,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":43655,"nodeType":"FunctionDefinition","src":"13131:142:28","nodes":[],"body":{"id":43654,"nodeType":"Block","src":"13193:80:28","nodes":[],"statements":[{"condition":{"id":43649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13207:36:28","subExpression":{"arguments":[{"id":43646,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43262,"src":"13227:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":43647,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43641,"src":"13235:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":43644,"name":"allo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43256,"src":"13208:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_IAllo_$42561","typeString":"contract IAllo"}},"id":43645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13213:13:28","memberName":"isPoolManager","nodeType":"MemberAccess","referencedDeclaration":42504,"src":"13208:18:28","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_address_$returns$_t_bool_$","typeString":"function (uint256,address) view external returns (bool)"}},"id":43648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13208:35:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":43653,"nodeType":"IfStatement","src":"13203:63:28","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":43650,"name":"UNAUTHORIZED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42935,"src":"13252:12:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":43651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13252:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":43652,"nodeType":"RevertStatement","src":"13245:21:28"}}]},"documentation":{"id":43639,"nodeType":"StructuredDocumentation","src":"12940:186:28","text":"@notice Checks if the '_sender' is a pool manager.\n @dev Reverts if the '_sender' is not a pool manager.\n @param _sender The address to check if they are a pool manager"},"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnlyPoolManager","nameLocation":"13140:21:28","parameters":{"id":43642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43641,"mutability":"mutable","name":"_sender","nameLocation":"13170:7:28","nodeType":"VariableDeclaration","scope":43655,"src":"13162:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43640,"name":"address","nodeType":"ElementaryTypeName","src":"13162:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13161:17:28"},"returnParameters":{"id":43643,"nodeType":"ParameterList","parameters":[],"src":"13193:0:28"},"scope":43844,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":43666,"nodeType":"FunctionDefinition","src":"13373:102:28","nodes":[],"body":{"id":43665,"nodeType":"Block","src":"13419:56:28","nodes":[],"statements":[{"condition":{"id":43660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13433:11:28","subExpression":{"id":43659,"name":"poolActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43260,"src":"13434:10:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":43664,"nodeType":"IfStatement","src":"13429:39:28","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":43661,"name":"POOL_INACTIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42971,"src":"13453:13:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":43662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13453:15:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":43663,"nodeType":"RevertStatement","src":"13446:22:28"}}]},"documentation":{"id":43656,"nodeType":"StructuredDocumentation","src":"13279:89:28","text":"@notice Checks if the pool is active.\n @dev Reverts if the pool is not active."},"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnlyActivePool","nameLocation":"13382:20:28","parameters":{"id":43657,"nodeType":"ParameterList","parameters":[],"src":"13402:2:28"},"returnParameters":{"id":43658,"nodeType":"ParameterList","parameters":[],"src":"13419:0:28"},"scope":43844,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":43676,"nodeType":"FunctionDefinition","src":"13573:97:28","nodes":[],"body":{"id":43675,"nodeType":"Block","src":"13617:53:28","nodes":[],"statements":[{"condition":{"id":43670,"name":"poolActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43260,"src":"13631:10:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":43674,"nodeType":"IfStatement","src":"13627:36:28","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":43671,"name":"POOL_ACTIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42974,"src":"13650:11:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":43672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13650:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":43673,"nodeType":"RevertStatement","src":"13643:20:28"}}]},"documentation":{"id":43667,"nodeType":"StructuredDocumentation","src":"13481:87:28","text":"@notice Checks if the pool is inactive.\n @dev Reverts if the pool is active."},"implemented":true,"kind":"function","modifiers":[],"name":"_checkInactivePool","nameLocation":"13582:18:28","parameters":{"id":43668,"nodeType":"ParameterList","parameters":[],"src":"13600:2:28"},"returnParameters":{"id":43669,"nodeType":"ParameterList","parameters":[],"src":"13617:0:28"},"scope":43844,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":43688,"nodeType":"FunctionDefinition","src":"13780:105:28","nodes":[],"body":{"id":43687,"nodeType":"Block","src":"13827:58:28","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":43682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":43680,"name":"poolId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43262,"src":"13841:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":43681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13851:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13841:11:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":43686,"nodeType":"IfStatement","src":"13837:41:28","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":43683,"name":"NOT_INITIALIZED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42965,"src":"13861:15:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":43684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13861:17:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":43685,"nodeType":"RevertStatement","src":"13854:24:28"}}]},"documentation":{"id":43677,"nodeType":"StructuredDocumentation","src":"13676:99:28","text":"@notice Checks if the pool is initialized.\n @dev Reverts if the pool is not initialized."},"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnlyInitialized","nameLocation":"13789:21:28","parameters":{"id":43678,"nodeType":"ParameterList","parameters":[],"src":"13810:2:28"},"returnParameters":{"id":43679,"nodeType":"ParameterList","parameters":[],"src":"13827:0:28"},"scope":43844,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":43703,"nodeType":"FunctionDefinition","src":"14125:118:28","nodes":[],"body":{"id":43702,"nodeType":"Block","src":"14172:71:28","nodes":[],"statements":[{"expression":{"id":43696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":43694,"name":"poolActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43260,"src":"14182:10:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":43695,"name":"_active","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43691,"src":"14195:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14182:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":43697,"nodeType":"ExpressionStatement","src":"14182:20:28"},{"eventCall":{"arguments":[{"id":43699,"name":"_active","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43691,"src":"14228:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":43698,"name":"PoolActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42814,"src":"14217:10:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":43700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14217:19:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":43701,"nodeType":"EmitStatement","src":"14212:24:28"}]},"documentation":{"id":43689,"nodeType":"StructuredDocumentation","src":"13891:229:28","text":"@notice Set the pool to active or inactive status.\n @dev This will emit a 'PoolActive()' event. Used by the strategy implementation.\n @param _active The status to set, 'true' means active, 'false' means inactive"},"implemented":true,"kind":"function","modifiers":[],"name":"_setPoolActive","nameLocation":"14134:14:28","parameters":{"id":43692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43691,"mutability":"mutable","name":"_active","nameLocation":"14154:7:28","nodeType":"VariableDeclaration","scope":43703,"src":"14149:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":43690,"name":"bool","nodeType":"ElementaryTypeName","src":"14149:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14148:14:28"},"returnParameters":{"id":43693,"nodeType":"ParameterList","parameters":[],"src":"14172:0:28"},"scope":43844,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":43712,"nodeType":"FunctionDefinition","src":"14409:96:28","nodes":[],"body":{"id":43711,"nodeType":"Block","src":"14471:34:28","nodes":[],"statements":[{"expression":{"id":43709,"name":"poolActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43260,"src":"14488:10:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":43708,"id":43710,"nodeType":"Return","src":"14481:17:28"}]},"documentation":{"id":43704,"nodeType":"StructuredDocumentation","src":"14249:155:28","text":"@notice Checks if the pool is active.\n @dev Used by the strategy implementation.\n @return 'true' if the pool is active, otherwise 'false'"},"implemented":true,"kind":"function","modifiers":[],"name":"_isPoolActive","nameLocation":"14418:13:28","parameters":{"id":43705,"nodeType":"ParameterList","parameters":[],"src":"14431:2:28"},"returnParameters":{"id":43708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":43712,"src":"14465:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":43706,"name":"bool","nodeType":"ElementaryTypeName","src":"14465:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14464:6:28"},"scope":43844,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":43720,"nodeType":"FunctionDefinition","src":"14676:98:28","nodes":[],"documentation":{"id":43713,"nodeType":"StructuredDocumentation","src":"14511:160:28","text":"@notice Checks if the allocator is valid\n @param _allocator The allocator address\n @return 'true' if the allocator is valid, otherwise 'false'"},"implemented":false,"kind":"function","modifiers":[],"name":"_isValidAllocator","nameLocation":"14685:17:28","parameters":{"id":43716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43715,"mutability":"mutable","name":"_allocator","nameLocation":"14720:10:28","nodeType":"VariableDeclaration","scope":43720,"src":"14712:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43714,"name":"address","nodeType":"ElementaryTypeName","src":"14712:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14702:34:28"},"returnParameters":{"id":43719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43718,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":43720,"src":"14768:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":43717,"name":"bool","nodeType":"ElementaryTypeName","src":"14768:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14767:6:28"},"scope":43844,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":43730,"nodeType":"FunctionDefinition","src":"15373:122:28","nodes":[],"documentation":{"id":43721,"nodeType":"StructuredDocumentation","src":"14780:588:28","text":"@notice This will register a recipient, set their status (and any other strategy specific values), and\n         return the ID of the recipient.\n @dev Able to change status all the way up to Accepted, or to Pending and if there are more steps, additional\n      functions should be added to allow the owner to check this. The owner could also check attestations directly\n      and then Accept for instance.\n @param _data The data to use to register the recipient\n @param _sender The address of the sender\n @return The ID of the recipient"},"implemented":false,"kind":"function","modifiers":[],"name":"_registerRecipient","nameLocation":"15382:18:28","parameters":{"id":43726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43723,"mutability":"mutable","name":"_data","nameLocation":"15423:5:28","nodeType":"VariableDeclaration","scope":43730,"src":"15410:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":43722,"name":"bytes","nodeType":"ElementaryTypeName","src":"15410:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":43725,"mutability":"mutable","name":"_sender","nameLocation":"15446:7:28","nodeType":"VariableDeclaration","scope":43730,"src":"15438:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43724,"name":"address","nodeType":"ElementaryTypeName","src":"15438:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15400:59:28"},"returnParameters":{"id":43729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43728,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":43730,"src":"15486:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43727,"name":"address","nodeType":"ElementaryTypeName","src":"15486:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15485:9:28"},"scope":43844,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":43738,"nodeType":"FunctionDefinition","src":"15751:73:28","nodes":[],"documentation":{"id":43731,"nodeType":"StructuredDocumentation","src":"15501:245:28","text":"@notice This will allocate to a recipient.\n @dev The encoded '_data' will be determined by the strategy implementation.\n @param _data The data to use to allocate to the recipient\n @param _sender The address of the sender"},"implemented":false,"kind":"function","modifiers":[],"name":"_allocate","nameLocation":"15760:9:28","parameters":{"id":43736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43733,"mutability":"mutable","name":"_data","nameLocation":"15783:5:28","nodeType":"VariableDeclaration","scope":43738,"src":"15770:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":43732,"name":"bytes","nodeType":"ElementaryTypeName","src":"15770:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":43735,"mutability":"mutable","name":"_sender","nameLocation":"15798:7:28","nodeType":"VariableDeclaration","scope":43738,"src":"15790:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43734,"name":"address","nodeType":"ElementaryTypeName","src":"15790:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15769:37:28"},"returnParameters":{"id":43737,"nodeType":"ParameterList","parameters":[],"src":"15823:0:28"},"scope":43844,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":43749,"nodeType":"FunctionDefinition","src":"16305:137:28","nodes":[],"documentation":{"id":43739,"nodeType":"StructuredDocumentation","src":"15830:470:28","text":"@notice This will distribute funds (tokens) to recipients.\n @dev most strategies will track a TOTAL amount per recipient, and a PAID amount, and pay the difference\n this contract will need to track the amount paid already, so that it doesn't double pay.\n @param _recipientIds The ids of the recipients to distribute to\n @param _data Data required will depend on the strategy implementation\n @param _sender The address of the sender"},"implemented":false,"kind":"function","modifiers":[],"name":"_distribute","nameLocation":"16314:11:28","parameters":{"id":43747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43742,"mutability":"mutable","name":"_recipientIds","nameLocation":"16352:13:28","nodeType":"VariableDeclaration","scope":43749,"src":"16335:30:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":43740,"name":"address","nodeType":"ElementaryTypeName","src":"16335:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":43741,"nodeType":"ArrayTypeName","src":"16335:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":43744,"mutability":"mutable","name":"_data","nameLocation":"16388:5:28","nodeType":"VariableDeclaration","scope":43749,"src":"16375:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":43743,"name":"bytes","nodeType":"ElementaryTypeName","src":"16375:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":43746,"mutability":"mutable","name":"_sender","nameLocation":"16411:7:28","nodeType":"VariableDeclaration","scope":43749,"src":"16403:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43745,"name":"address","nodeType":"ElementaryTypeName","src":"16403:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16325:99:28"},"returnParameters":{"id":43748,"nodeType":"ParameterList","parameters":[],"src":"16441:0:28"},"scope":43844,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":43760,"nodeType":"FunctionDefinition","src":"16784:137:28","nodes":[],"documentation":{"id":43750,"nodeType":"StructuredDocumentation","src":"16448:331:28","text":"@notice This will get the payout summary for a recipient.\n @dev The encoded '_data' will be determined by the strategy implementation.\n @param _recipientId The ID of the recipient\n @param _data The data to use to get the payout summary for the recipient\n @return The payout summary for the recipient"},"implemented":false,"kind":"function","modifiers":[],"name":"_getPayout","nameLocation":"16793:10:28","parameters":{"id":43755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43752,"mutability":"mutable","name":"_recipientId","nameLocation":"16821:12:28","nodeType":"VariableDeclaration","scope":43760,"src":"16813:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43751,"name":"address","nodeType":"ElementaryTypeName","src":"16813:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":43754,"mutability":"mutable","name":"_data","nameLocation":"16856:5:28","nodeType":"VariableDeclaration","scope":43760,"src":"16843:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":43753,"name":"bytes","nodeType":"ElementaryTypeName","src":"16843:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16803:64:28"},"returnParameters":{"id":43759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":43760,"src":"16899:20:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PayoutSummary_$42771_memory_ptr","typeString":"struct IStrategy.PayoutSummary"},"typeName":{"id":43757,"nodeType":"UserDefinedTypeName","pathNode":{"id":43756,"name":"PayoutSummary","nameLocations":["16899:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":42771,"src":"16899:13:28"},"referencedDeclaration":42771,"src":"16899:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_PayoutSummary_$42771_storage_ptr","typeString":"struct IStrategy.PayoutSummary"}},"visibility":"internal"}],"src":"16898:22:28"},"scope":43844,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":43769,"nodeType":"FunctionDefinition","src":"17080:104:28","nodes":[],"documentation":{"id":43761,"nodeType":"StructuredDocumentation","src":"16927:148:28","text":"@notice This will get the status of a recipient.\n @param _recipientId The ID of the recipient\n @return The status of the recipient"},"implemented":false,"kind":"function","modifiers":[],"name":"_getRecipientStatus","nameLocation":"17089:19:28","parameters":{"id":43764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43763,"mutability":"mutable","name":"_recipientId","nameLocation":"17126:12:28","nodeType":"VariableDeclaration","scope":43769,"src":"17118:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43762,"name":"address","nodeType":"ElementaryTypeName","src":"17118:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17108:36:28"},"returnParameters":{"id":43768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":43769,"src":"17176:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$42766","typeString":"enum IStrategy.Status"},"typeName":{"id":43766,"nodeType":"UserDefinedTypeName","pathNode":{"id":43765,"name":"Status","nameLocations":["17176:6:28"],"nodeType":"IdentifierPath","referencedDeclaration":42766,"src":"17176:6:28"},"referencedDeclaration":42766,"src":"17176:6:28","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$42766","typeString":"enum IStrategy.Status"}},"visibility":"internal"}],"src":"17175:8:28"},"scope":43844,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":43776,"nodeType":"FunctionDefinition","src":"17444:71:28","nodes":[],"body":{"id":43775,"nodeType":"Block","src":"17513:2:28","nodes":[],"statements":[]},"documentation":{"id":43770,"nodeType":"StructuredDocumentation","src":"17323:116:28","text":"@notice Hook called before increasing the pool amount.\n @param _amount The amount to increase the pool by"},"implemented":true,"kind":"function","modifiers":[],"name":"_beforeIncreasePoolAmount","nameLocation":"17453:25:28","parameters":{"id":43773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43772,"mutability":"mutable","name":"_amount","nameLocation":"17487:7:28","nodeType":"VariableDeclaration","scope":43776,"src":"17479:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":43771,"name":"uint256","nodeType":"ElementaryTypeName","src":"17479:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17478:17:28"},"returnParameters":{"id":43774,"nodeType":"ParameterList","parameters":[],"src":"17513:0:28"},"scope":43844,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":43783,"nodeType":"FunctionDefinition","src":"17641:70:28","nodes":[],"body":{"id":43782,"nodeType":"Block","src":"17709:2:28","nodes":[],"statements":[]},"documentation":{"id":43777,"nodeType":"StructuredDocumentation","src":"17521:115:28","text":"@notice Hook called after increasing the pool amount.\n @param _amount The amount to increase the pool by"},"implemented":true,"kind":"function","modifiers":[],"name":"_afterIncreasePoolAmount","nameLocation":"17650:24:28","parameters":{"id":43780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43779,"mutability":"mutable","name":"_amount","nameLocation":"17683:7:28","nodeType":"VariableDeclaration","scope":43783,"src":"17675:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":43778,"name":"uint256","nodeType":"ElementaryTypeName","src":"17675:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17674:17:28"},"returnParameters":{"id":43781,"nodeType":"ParameterList","parameters":[],"src":"17709:0:28"},"scope":43844,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":43792,"nodeType":"FunctionDefinition","src":"17889:112:28","nodes":[],"body":{"id":43791,"nodeType":"Block","src":"17999:2:28","nodes":[],"statements":[]},"documentation":{"id":43784,"nodeType":"StructuredDocumentation","src":"17717:167:28","text":"@notice Hook called before registering a recipient.\n @param _data The data to use to register the recipient\n @param _sender The address of the sender"},"implemented":true,"kind":"function","modifiers":[],"name":"_beforeRegisterRecipient","nameLocation":"17898:24:28","parameters":{"id":43789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43786,"mutability":"mutable","name":"_data","nameLocation":"17945:5:28","nodeType":"VariableDeclaration","scope":43792,"src":"17932:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":43785,"name":"bytes","nodeType":"ElementaryTypeName","src":"17932:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":43788,"mutability":"mutable","name":"_sender","nameLocation":"17968:7:28","nodeType":"VariableDeclaration","scope":43792,"src":"17960:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43787,"name":"address","nodeType":"ElementaryTypeName","src":"17960:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17922:59:28"},"returnParameters":{"id":43790,"nodeType":"ParameterList","parameters":[],"src":"17999:0:28"},"scope":43844,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":43801,"nodeType":"FunctionDefinition","src":"18178:111:28","nodes":[],"body":{"id":43800,"nodeType":"Block","src":"18287:2:28","nodes":[],"statements":[]},"documentation":{"id":43793,"nodeType":"StructuredDocumentation","src":"18007:166:28","text":"@notice Hook called after registering a recipient.\n @param _data The data to use to register the recipient\n @param _sender The address of the sender"},"implemented":true,"kind":"function","modifiers":[],"name":"_afterRegisterRecipient","nameLocation":"18187:23:28","parameters":{"id":43798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43795,"mutability":"mutable","name":"_data","nameLocation":"18233:5:28","nodeType":"VariableDeclaration","scope":43801,"src":"18220:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":43794,"name":"bytes","nodeType":"ElementaryTypeName","src":"18220:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":43797,"mutability":"mutable","name":"_sender","nameLocation":"18256:7:28","nodeType":"VariableDeclaration","scope":43801,"src":"18248:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43796,"name":"address","nodeType":"ElementaryTypeName","src":"18248:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18210:59:28"},"returnParameters":{"id":43799,"nodeType":"ParameterList","parameters":[],"src":"18287:0:28"},"scope":43844,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":43810,"nodeType":"FunctionDefinition","src":"18472:103:28","nodes":[],"body":{"id":43809,"nodeType":"Block","src":"18573:2:28","nodes":[],"statements":[]},"documentation":{"id":43802,"nodeType":"StructuredDocumentation","src":"18295:172:28","text":"@notice Hook called before allocating to a recipient.\n @param _data The data to use to allocate to the recipient\n @param _sender The address of the sender"},"implemented":true,"kind":"function","modifiers":[],"name":"_beforeAllocate","nameLocation":"18481:15:28","parameters":{"id":43807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43804,"mutability":"mutable","name":"_data","nameLocation":"18519:5:28","nodeType":"VariableDeclaration","scope":43810,"src":"18506:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":43803,"name":"bytes","nodeType":"ElementaryTypeName","src":"18506:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":43806,"mutability":"mutable","name":"_sender","nameLocation":"18542:7:28","nodeType":"VariableDeclaration","scope":43810,"src":"18534:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43805,"name":"address","nodeType":"ElementaryTypeName","src":"18534:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18496:59:28"},"returnParameters":{"id":43808,"nodeType":"ParameterList","parameters":[],"src":"18573:0:28"},"scope":43844,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":43819,"nodeType":"FunctionDefinition","src":"18757:102:28","nodes":[],"body":{"id":43818,"nodeType":"Block","src":"18857:2:28","nodes":[],"statements":[]},"documentation":{"id":43811,"nodeType":"StructuredDocumentation","src":"18581:171:28","text":"@notice Hook called after allocating to a recipient.\n @param _data The data to use to allocate to the recipient\n @param _sender The address of the sender"},"implemented":true,"kind":"function","modifiers":[],"name":"_afterAllocate","nameLocation":"18766:14:28","parameters":{"id":43816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43813,"mutability":"mutable","name":"_data","nameLocation":"18803:5:28","nodeType":"VariableDeclaration","scope":43819,"src":"18790:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":43812,"name":"bytes","nodeType":"ElementaryTypeName","src":"18790:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":43815,"mutability":"mutable","name":"_sender","nameLocation":"18826:7:28","nodeType":"VariableDeclaration","scope":43819,"src":"18818:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43814,"name":"address","nodeType":"ElementaryTypeName","src":"18818:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18780:59:28"},"returnParameters":{"id":43817,"nodeType":"ParameterList","parameters":[],"src":"18857:0:28"},"scope":43844,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":43831,"nodeType":"FunctionDefinition","src":"19116:145:28","nodes":[],"body":{"id":43830,"nodeType":"Block","src":"19259:2:28","nodes":[],"statements":[]},"documentation":{"id":43820,"nodeType":"StructuredDocumentation","src":"18865:246:28","text":"@notice Hook called before distributing funds (tokens) to recipients.\n @param _recipientIds The IDs of the recipients\n @param _data The data to use to distribute to the recipients\n @param _sender The address of the sender"},"implemented":true,"kind":"function","modifiers":[],"name":"_beforeDistribute","nameLocation":"19125:17:28","parameters":{"id":43828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43823,"mutability":"mutable","name":"_recipientIds","nameLocation":"19169:13:28","nodeType":"VariableDeclaration","scope":43831,"src":"19152:30:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":43821,"name":"address","nodeType":"ElementaryTypeName","src":"19152:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":43822,"nodeType":"ArrayTypeName","src":"19152:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":43825,"mutability":"mutable","name":"_data","nameLocation":"19205:5:28","nodeType":"VariableDeclaration","scope":43831,"src":"19192:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":43824,"name":"bytes","nodeType":"ElementaryTypeName","src":"19192:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":43827,"mutability":"mutable","name":"_sender","nameLocation":"19228:7:28","nodeType":"VariableDeclaration","scope":43831,"src":"19220:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43826,"name":"address","nodeType":"ElementaryTypeName","src":"19220:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19142:99:28"},"returnParameters":{"id":43829,"nodeType":"ParameterList","parameters":[],"src":"19259:0:28"},"scope":43844,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":43843,"nodeType":"FunctionDefinition","src":"19517:144:28","nodes":[],"body":{"id":43842,"nodeType":"Block","src":"19659:2:28","nodes":[],"statements":[]},"documentation":{"id":43832,"nodeType":"StructuredDocumentation","src":"19267:245:28","text":"@notice Hook called after distributing funds (tokens) to recipients.\n @param _recipientIds The IDs of the recipients\n @param _data The data to use to distribute to the recipients\n @param _sender The address of the sender"},"implemented":true,"kind":"function","modifiers":[],"name":"_afterDistribute","nameLocation":"19526:16:28","parameters":{"id":43840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43835,"mutability":"mutable","name":"_recipientIds","nameLocation":"19569:13:28","nodeType":"VariableDeclaration","scope":43843,"src":"19552:30:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":43833,"name":"address","nodeType":"ElementaryTypeName","src":"19552:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":43834,"nodeType":"ArrayTypeName","src":"19552:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":43837,"mutability":"mutable","name":"_data","nameLocation":"19605:5:28","nodeType":"VariableDeclaration","scope":43843,"src":"19592:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":43836,"name":"bytes","nodeType":"ElementaryTypeName","src":"19592:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":43839,"mutability":"mutable","name":"_sender","nameLocation":"19628:7:28","nodeType":"VariableDeclaration","scope":43843,"src":"19620:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43838,"name":"address","nodeType":"ElementaryTypeName","src":"19620:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19542:99:28"},"returnParameters":{"id":43841,"nodeType":"ParameterList","parameters":[],"src":"19659:0:28"},"scope":43844,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"abstract":true,"baseContracts":[{"baseName":{"id":43247,"name":"IStrategy","nameLocations":["4599:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":42920,"src":"4599:9:28"},"id":43248,"nodeType":"InheritanceSpecifier","src":"4599:9:28"},{"baseName":{"id":43249,"name":"Transfer","nameLocations":["4610:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":43238,"src":"4610:8:28"},"id":43250,"nodeType":"InheritanceSpecifier","src":"4610:8:28"},{"baseName":{"id":43251,"name":"Errors","nameLocations":["4620:6:28"],"nodeType":"IdentifierPath","referencedDeclaration":43010,"src":"4620:6:28"},"id":43252,"nodeType":"InheritanceSpecifier","src":"4620:6:28"}],"canonicalName":"BaseStrategy","contractDependencies":[],"contractKind":"contract","documentation":{"id":43246,"nodeType":"StructuredDocumentation","src":"4241:324:28","text":"@title BaseStrategy Contract\n @author @thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\n @notice This contract is the base contract for all strategies\n @dev This contract is implemented by all strategies."},"fullyImplemented":false,"linearizedBaseContracts":[43844,43010,43238,43027,42920],"name":"BaseStrategy","nameLocation":"4583:12:28","scope":43845,"usedErrors":[42926,42929,42932,42935,42938,42941,42944,42947,42950,42953,42956,42959,42962,42965,42968,42971,42974,42977,42980,42983,42986,42989,42992,42995,43000,43003,43006,43009,43038]}],"license":"AGPL-3.0-only"},"id":28}